{
  "name": "select-mvp",
  "version": "1.0.0",
  "description": "* Make sure the Docker is Installed in your system, if not you can download it from here https://www.docker.com/.\r * Pull postgres image for Database storage by running this command `docker run -d --name timescaledb -p 5432:5432 -e POSTGRES_PASSWORD=postgres timescale/timescaledb-ha:pg14-latest` once downloaded, start this image.\r * You should have Elixir (V1.13.2) and NodeJS(V14.18.2) installed in your system.\r * make a copy of `.env.template` as `.env` in the root directory\r * and run `source .env` or just do `sh onebox` - this will export all the available environment (You may see some DB migration issues)\r * make sure to create `/mnt/mnesia` directory in your system root directory or you can update your `.env` with custom directory by adding this `export JETZY_DEV_OVERRIDE_MNESIA_DIR=\"<CUSTOM_DIRECTORY_ABSOLUTE_PATH>\"`\r * Once the app is compiled successfully and when you see the `iex` session run the below commands\r     * then go into the liquibase folder and make sure to update the config file `liquibase.properties.dev` (if not created, duplicate this `liquibase.properties`) with the proper DB credentials and then run `./update-schema`\r     * Once liquibase is completed run `mix ecto.migrate`\r     * Then run `sh onbox` and inside `iex` run `Mix.Tasks.Install.run` and then `Mix.Tasks.Migrate.run` so this will setup all the required Database for the API, so now you can run the API server in you local by login to `localhost:8080`\r     * If in case youre stuck at `Mix.Tasks.Migrate.run` with the message `Elixir.Mix.Tasks.Install - Elixir.Noizu.MnesiaVersioning.Database.wait()` run the below commands \r         * `Amnesia.stop` \r         * `Amnesia.Schema.destroy` and then run the `Mix.Tasks.Install.run`",
  "main": "apps\\api\\lib\\api_web\\templates\\jetzy_select-frontend\\public_html\\assets\\js\\dorang.js",
  "directories": {
    "doc": "docs"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/JetzyTechTeam/Select-MVP.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/JetzyTechTeam/Select-MVP/issues"
  },
  "homepage": "https://github.com/JetzyTechTeam/Select-MVP#readme",
  "dependencies": {
    "mdb-ui-kit": "^6.0.0"
  }
}
