{
  "basePath": "/api",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "CreateFollow": {
      "description": "Create Follow",
      "example": {
        "followed_id": "3a3a53d-1d55-40c2-b955-57f8d7be0232"
      },
      "properties": {
        "follower_id": {
          "description": "Follow ID",
          "type": "string"
        }
      },
      "title": "Create Follow",
      "type": "object"
    },
    "InterestTopic": {
      "description": "Interest Topic",
      "example": {
        "ResponseData": {
          "interestTopic": {
            "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
            "createdBy": {
              "firstName": "test",
              "lastName": "name",
              "profileImage": "user-bc6038a1-4eb2-4bab-aaa5-eb5be8f3676b.jpg",
              "roleId": "user"
            },
            "createdById": "8d045495-19ca-490e-b18d-8e881107e3bd",
            "description": "Interest Topic Description",
            "id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11",
            "imageName": "user-a90c76d4-ba43-42d6-8c8f-975dda4c9a2b.jpg",
            "interest_id": "b640adbb-75a8-47a7-b3b6-77ef777d2a11",
            "room_id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11",
            "topic_name": "Interest Topic"
          }
        }
      },
      "title": "Interest Topic",
      "type": "object"
    },
    "CreateUserRole": {
      "description": "Create UserRole",
      "example": {
        "role_id": "admin",
        "user_id": "cbe2d554-b72b-4a46-82ac-61fd0121d348"
      },
      "properties": {
        "role_id": {
          "description": "Role ID",
          "type": "string"
        },
        "user_id": {
          "description": "User ID",
          "type": "string"
        }
      },
      "title": "Create UserRole",
      "type": "object"
    },
    "InterestEvents": {
      "description": "User Interest By Room ID",
      "example": {
        "responseData": {
          "data": [
            {
              "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
              "description": "Event testing 2",
              "eventEndDate": "2018-08-02",
              "eventEndTime": "13:00:00",
              "eventStartDate": "2018-08-02",
              "eventStartTime": "08:00:00",
              "formatedAddress": "ajqjjajwj",
              "id": "48685b68-63fd-11ec-90d6-0242ac120003",
              "image": "interest-618c4478-631f-42e7-b2c6-4f258d0b080b.jpg",
              "interestId": "7aad45a5-f697-4dae-bf0a-a88dd9e0adec",
              "latitude": 881.0,
              "longitude": 133.0
            },
            {
              "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
              "description": "This is a first description test",
              "eventEndDate": "2022-01-10",
              "eventEndTime": "22:15:47",
              "eventStartDate": "2022-01-07",
              "eventStartTime": "16:15:47",
              "formatedAddress": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
              "id": "d94ecbb5-3a1b-42e4-996f-db9bd0817a41",
              "image": "user_event/1f0e1481-1f99-4971-bd22-dc59821ea692.jpg",
              "interestId": "2cfd8787-315b-4f3b-8c50-83f2a14d3f3c",
              "latitude": 31.5656822,
              "longitude": 74.3141829
            }
          ],
          "pagination": {
            "page": 1,
            "totalPages": 1,
            "totalRows": 2
          }
        }
      },
      "title": "User Interest by Room ID",
      "type": "object"
    },
    "VerifyUserImageResponse": {
      "description": "uploading user image for verification",
      "example": {
        "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
        "image": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
      },
      "properties": {
        "image": {
          "description": "image",
          "type": "string"
        }
      },
      "title": "Verify User Image",
      "type": "object"
    },
    "UserChatRoomsList": {
      "description": "Chat Rooms",
      "example": {
        "ResponseData": {
          "userChats": [
            {
              "lastMessage": {
                "callbackVerification": "here we go",
                "message": "",
                "messageId": "546cc1e4-6970-4182-9094-ed9f0921ecd8",
                "messageImages": [],
                "messageTime": "2021-12-24T10:09:58Z",
                "user": {
                  "firstName": "",
                  "lastName": "",
                  "userId": "a711bf85-963f-42ed-9728-c2047d5694fb"
                }
              },
              "roomId": "2f0226ca-ea83-492f-b209-08d4f9c45d6b",
              "roomType": "event_chat",
              "roomUsers": [
                {
                  "firstName": "",
                  "lastName": "",
                  "userId": "d68bbf19-98d0-4b4b-84b6-3cf94e89113c"
                },
                {
                  "firstName": "",
                  "lastName": "",
                  "userId": "fa11b37c-46d7-4749-bb88-46b26820ea69",
                  "userImage": "https://tanbits-jetzy.s3.amazonaws.com/images/user-profile-images/user-4ade59c9-e6a6-46cf-95e9-1aee9a94a8fa.jpg"
                },
                {
                  "firstName": "",
                  "lastName": "",
                  "userId": "98a62112-5e2f-4947-8c85-0542f00a7eb5",
                  "userImage": "https://tanbits-jetzy.s3.amazonaws.com/images/user-profile-images/user-4ade59c9-e6a6-46cf-95e9-1aee9a94a8fa.jpg"
                }
              ],
              "userEvent": {
                "description": "",
                "eventEndDate": "",
                "eventStartDate": "",
                "formatedAddress": "",
                "id": "1528b8c7-3893-4897-9b9c-75bc8ad357bf",
                "image": "",
                "interestId": "1f73cf94-6c64-410b-9428-0e7c75007f33",
                "interestName": "",
                "latitude": 0.0,
                "longitude": 0.0,
                "roomId": "",
                "user": {
                  "firstName": "",
                  "lastName": "",
                  "userId": "a711bf85-963f-42ed-9728-c2047d5694fb"
                }
              }
            },
            {
              "lastMessage": {
                "callbackVerification": "here we go",
                "message": "",
                "messageId": "49abe8fa-fb4d-4a38-8752-9b0f135e4c15",
                "messageImages": [],
                "messageTime": "2021-12-24T09:57:39Z",
                "user": {
                  "firstName": "",
                  "lastName": "",
                  "userId": "a711bf85-963f-42ed-9728-c2047d5694fb"
                }
              },
              "roomId": "de856c10-b458-49de-ba1d-71a95ca6acb7",
              "roomType": "user_chat",
              "roomUsers": [
                {
                  "firstName": "",
                  "lastName": "",
                  "userId": "a711bf85-963f-42ed-9728-c2047d5694fb"
                },
                {
                  "firstName": "",
                  "lastName": "",
                  "userId": "8293b415-a13c-4a36-a117-5a6b8db2af9c"
                }
              ]
            }
          ]
        }
      },
      "title": "Chat Rooms",
      "type": "object"
    },
    "CreateBlock": {
      "description": "Create User block",
      "example": {
        "is_blocked": true,
        "user_to_id": "c641adbb-77d4-47a4-b3b3-77ef718d2abc"
      },
      "properties": {
        "is_blocked": {
          "description": "Set true for block, false for unblock",
          "type": "boolean"
        },
        "user_to_id": {
          "description": "ID of the User to Block/Unblock",
          "type": "string"
        }
      },
      "title": "Create User block",
      "type": "object"
    },
    "CreateUserInterest": {
      "description": "Create User Interests",
      "example": {
        "interest_list": [
          {
            "interest_id": "2cfd8787-315b-4f3b-8c50-83f2a14d3f3c",
            "is_member": true
          },
          {
            "interest_id": "41fe4093-5be0-434f-9db6-82ceb9f91948",
            "is_member": false
          }
        ]
      },
      "properties": {
        "interest_list": {
          "description": "interest ids",
          "type": "array"
        }
      },
      "title": "Create User Interests",
      "type": "object"
    },
    "UserImageResponse": {
      "description": "User Profile image uploading",
      "example": {
        "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
        "image": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
      },
      "properties": {
        "image": {
          "description": "image",
          "type": "string"
        }
      },
      "title": "Add User Profile Image",
      "type": "object"
    },
    "ListInterest": {
      "description": "List Of Interest",
      "example": [
        {
          "background_colour": "#f79432",
          "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
          "description": "Test Interest",
          "id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11",
          "image_name": "interest-618c4478-631f-42e7-b2c6-4f258d0b080b.jpg",
          "interest_name": "Interest",
          "is_group_private": true,
          "is_private": true,
          "small_image_name": "interest-618c4478-631f-42e7-b2c6-4f258d0b080b.jpg",
          "status": 0
        },
        {
          "background_colour": "#f79432",
          "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
          "description": "Test Interest",
          "id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11",
          "image_name": "interest-618c4478-631f-42e7-b2c6-4f258d0b080b.jpg",
          "interest_name": "Interest",
          "is_group_private": true,
          "is_private": true,
          "small_image_name": "interest-618c4478-631f-42e7-b2c6-4f258d0b080b.jpg",
          "status": 0
        }
      ],
      "title": "List Of Interest",
      "type": "object"
    },
    "InviteUser": {
      "description": "User Invite Schema",
      "example": {
        "referred_to": "superadmin@jetzy.com"
      },
      "properties": {
        "referred_to": {
          "description": "Referred To",
          "type": "string"
        }
      },
      "title": "Invite Schema",
      "type": "object"
    },
    "StartGroupChat": {
      "description": "Start chatting witn in a group",
      "example": {
        "group_name": "Jetzy",
        "user_ids": [
          "41efe64a-5c2e-4d6b-a6d3-a534b2a58e85",
          "41efe64a-5c2e-4d6b-a6d3-a534b2a58e85"
        ]
      },
      "properties": {
        "group_name": {
          "description": "Group name",
          "type": "string"
        },
        "user_ids": {
          "description": "User ID to chat with",
          "type": "array"
        }
      },
      "title": "Start Group Chat",
      "type": "object"
    },
    "JetPoint": {
      "description": "Add Jetpoints",
      "example": {
        "ResponseData": {
          "message": "Jetpoints added successfully!",
          "success": true
        }
      },
      "title": "Add Jetpoints",
      "type": "object"
    },
    "Timeline": {
      "description": "Timeline",
      "example": {
        "responseData": {
          "data": [
            {
              "comments": {
                "description": "Excellent",
                "id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                "inserted_at": "",
                "replies": [
                  {
                    "comment_id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                    "description": "Thanks",
                    "id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                    "inserted_at": "",
                    "updated_at": "",
                    "user": {
                      "first_name": "First Name",
                      "last_name": "Last Name",
                      "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                      "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
                    }
                  }
                ],
                "replies_count": 3,
                "shoutout_id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                "updated_at": "",
                "user": {
                  "first_name": "First Name",
                  "last_name": "Last Name",
                  "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                  "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
                }
              },
              "comments_count": 3,
              "created_date": "",
              "description": "Here is a description about the post",
              "id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
              "is_old_moment": false,
              "is_shared": false,
              "likes_count": 3,
              "self_like": false,
              "shoutout_guid": "",
              "shoutout_images": [
                "shoutout/a31f1576-a38e-473a-8ca6-64ce28368caf.png",
                "shoutout/63ca14a5-e41a-43a6-8f3c-c09b37e67db7.png"
              ],
              "shoutout_latitude": 0.0,
              "shoutout_longitude": 0.0,
              "title": "First Post",
              "updated_by": "",
              "url": "Post Link",
              "user": {
                "base_url": "https://tanbits-jetzy.s3.amazonaws.com/",
                "first_name": "First Name",
                "last_name": "Last Name",
                "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
              },
              "user_small_image_path": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
            }
          ],
          "pagination": {
            "page": 1,
            "total_pages": 2,
            "total_rows": 10
          }
        }
      },
      "title": "Timeline",
      "type": "object"
    },
    "Resource": {
      "description": "Resource",
      "example": {
        "id": "users",
        "name": "Users"
      },
      "title": "Resource",
      "type": "object"
    },
    "InterestTopicMember": {
      "description": "List of all members by Room ID",
      "example": {
        "responseData": {
          "data": [
            {
              "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
              "firstName": "test",
              "lastName": "name",
              "roomId": "bb5ecba7-0515-468b-8f91-5711b4bc4d98",
              "userId": "203a2d1e-dab1-4e03-acbd-7ce88db518e6",
              "userImage": "user/1b55cdbd-5dea-4d6b-802e-70bf173ba311.jpg"
            },
            {
              "baseUrl": "null",
              "firstName": "Super",
              "lastName": "Admin",
              "roomId": "bb5ecba7-0515-468b-8f91-5711b4bc4d98",
              "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
              "userImage": "null"
            },
            {
              "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
              "firstName": "test",
              "lastName": "name",
              "roomId": "bb5ecba7-0515-468b-8f91-5711b4bc4d98",
              "userId": "b280cf1f-ce8e-4f53-8581-0086ffb0759d",
              "userImage": "user/55682946-8c67-495d-b976-544a151283e8.jpg"
            }
          ],
          "pagination": {
            "page": 1,
            "totalPages": 1,
            "totalRows": 2
          }
        }
      },
      "title": "List of all members by Room ID",
      "type": "object"
    },
    "UpdateStatus": {
      "description": "Admin Update user Statue Schema",
      "example": {
        "email": "superadmin@jetzy.com"
      },
      "properties": {
        "email": {
          "description": "email",
          "type": "string"
        }
      },
      "title": "Update Status Schema",
      "type": "object"
    },
    "GuestInterest": {
      "description": "GuestInterest",
      "example": {
        "ResponseData": [
          "2cfd8787-315b-4f3b-8c50-83f2a14d3f3c",
          "41fe4093-5be0-434f-9db6-82ceb9f91948"
        ]
      },
      "title": "GuestInterest",
      "type": "object"
    },
    "StartUserChat": {
      "description": "Start User Chat, chat user_id",
      "example": {
        "user_id": "41efe64a-5c2e-4d6b-a6d3-a534b2a58e85"
      },
      "properties": {
        "referral_code": {
          "description": "Room custom Referral code",
          "type": "string"
        },
        "user_id": {
          "description": "User ID to chat with",
          "type": "string"
        }
      },
      "title": "Start User Chat",
      "type": "object"
    },
    "ListResource": {
      "description": "List Of Resources",
      "example": [
        {
          "id": "users",
          "name": "Users"
        },
        {
          "id": "shoutouts",
          "name": "Shout Outs"
        }
      ],
      "title": "List Of Resources",
      "type": "object"
    },
    "PostType": {
      "description": "Resource",
      "example": {
        "id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11",
        "image_ext": "test image",
        "image_name": "Test image",
        "image_sync": "test",
        "is_shared": true,
        "latitude": 2.2222222,
        "longitude": 783.224552,
        "old_moment": "OLD test",
        "post_type_id": "b640adbb-75a8-47a7-b3b6-77ef777d2a11",
        "shoutout_type_id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11",
        "title": "Post",
        "updated_by": "test user",
        "user_id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11"
      },
      "title": "Resource",
      "type": "object"
    },
    "AcceptDeclineFollow": {
      "description": "Accept Decline Follow",
      "example": {
        "user_id": "3a3a53d-1d55-40c2-b955-57f8d7be0232"
      },
      "properties": {
        "user_id": {
          "description": "Follower ID",
          "type": "string"
        }
      },
      "title": "Accept Decline Follow",
      "type": "object"
    },
    "SocialSignUp": {
      "description": "Social Sign Up Schema",
      "example": {
        "installs": {
          "device_token": "4dsa8s-dsad4-dsadsadasdsa",
          "fcm_token": "dsad-dfsfads543fdsfdasd45"
        },
        "provider": "google",
        "token": ""
      },
      "properties": {
        "provider": {
          "description": "provider",
          "type": "string"
        },
        "token": {
          "description": "token",
          "type": "string"
        }
      },
      "title": "Social Sign Up User Schema",
      "type": "object"
    },
    "CreatePostType": {
      "description": "Create Resource",
      "example": {
        "image_ext": "test image",
        "image_name": "Test image",
        "image_sync": "test",
        "is_shared": true,
        "latitude": 2.2222222,
        "longitude": 783.224552,
        "old_moment": "OLD test",
        "post_type_id": "b640adbb-75a8-47a7-b3b6-77ef777d2a11",
        "shoutout_type_id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11",
        "title": "Post",
        "updated_by": "test user",
        "user_id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11"
      },
      "properties": {
        "image_ext": {
          "description": "Image Text",
          "type": "string"
        },
        "image_name": {
          "description": "Image Name",
          "type": "string"
        },
        "image_sync": {
          "description": "Image Sync",
          "type": "string"
        },
        "is_shared": {
          "description": "Is Shard",
          "type": "boolean"
        },
        "latitude": {
          "description": "Latitude",
          "type": "float"
        },
        "longitude": {
          "description": "Longitude",
          "type": "float"
        },
        "old_moment": {
          "description": "Old Moment",
          "type": "string"
        },
        "post_type_id": {
          "description": "Post Type ID",
          "type": "string"
        },
        "shoutout_type_id": {
          "description": "ShoutOut Type ID",
          "type": "string"
        },
        "title": {
          "description": "Title",
          "type": "string"
        },
        "updated_by": {
          "description": "Updated By",
          "type": "string"
        },
        "user_id": {
          "description": "User ID",
          "type": "string"
        }
      },
      "title": "Create Resource",
      "type": "object"
    },
    "TotalRewardPoints": {
      "description": "Total Reward Points of User",
      "example": {
        "ResponseData": {
          "totalPoint": 163.0
        }
      },
      "title": "Total Reward Points of User",
      "type": "object"
    },
    "UpdateNotificationStatus": {
      "description": "Update Post Type",
      "example": {
        "is_read": true,
        "notification_ids": [
          "b640adbb-75a8-47a7-b3b6-77ef718d2a11",
          "b640adbb-75a8-47a7-b3b6-77ef718d2a11"
        ]
      },
      "properties": {
        "is_read": {
          "description": true,
          "type": "boolean"
        },
        "notification_id": {
          "description": "ID",
          "type": "string"
        }
      },
      "title": "Update Post Type",
      "type": "object"
    },
    "ListComment": {
      "description": "List Of Comments",
      "example": {
        "responseData": {
          "data": [
            {
              "description": "Outstanding!! Keep It Up.",
              "id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
              "replies": [
                {
                  "comment_id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                  "description": "Thanks",
                  "id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                  "inserted_at": "",
                  "updated_at": "",
                  "user": {
                    "first_name": "First Name",
                    "last_name": "Last Name",
                    "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                    "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
                  }
                }
              ],
              "replies_count": 2,
              "user": {
                "first_name": "First name",
                "last_name": "Last name",
                "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
              }
            }
          ],
          "pagination": {
            "page": 1,
            "total_pages": 2,
            "total_rows": 10
          }
        }
      },
      "title": "List OF Comments",
      "type": "object"
    },
    "UserEventLike": {
      "description": "UserEvent Like details",
      "example": {
        "ResponseData": {
          "is_deleted": false,
          "item_id": "",
          "item_type": "",
          "status": true,
          "total_likes": 2,
          "user_self_like": true
        }
      },
      "title": "UserEvent Likes",
      "type": "object"
    },
    "Posts": {
      "description": "Posts",
      "example": {
        "responseData": {
          "comments": {
            "description": "Excellent",
            "id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
            "inserted_at": "",
            "replies": [
              {
                "comment_id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                "description": "Thanks",
                "id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                "inserted_at": "",
                "updated_at": "",
                "user": {
                  "first_name": "First Name",
                  "last_name": "Last Name",
                  "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                  "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
                }
              }
            ],
            "replies_count": 3,
            "shoutout_id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
            "updated_at": "",
            "user": {
              "first_name": "First Name",
              "last_name": "Last Name",
              "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
              "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
            }
          },
          "comments_count": 3,
          "created_date": "",
          "description": "Here is a description about the post",
          "id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
          "is_old_moment": false,
          "is_shared": false,
          "likes_count": 3,
          "self_like": false,
          "shoutout_guid": "",
          "shoutout_images": [
            "shoutout/a31f1576-a38e-473a-8ca6-64ce28368caf.png",
            "shoutout/63ca14a5-e41a-43a6-8f3c-c09b37e67db7.png"
          ],
          "shoutout_latitude": 0.0,
          "shoutout_longitude": 0.0,
          "title": "First Post",
          "updated_by": "",
          "url": "Post Link",
          "user": {
            "base_url": "https://tanbits-jetzy.s3.amazonaws.com/",
            "first_name": "First Name",
            "last_name": "Last Name",
            "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
            "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
          },
          "user_small_image_path": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
        }
      },
      "title": "Posts",
      "type": "object"
    },
    "SignUp": {
      "description": "User Sign In Schema",
      "example": {
        "email": "superadmin@jetzy.com",
        "first_name": "test",
        "image": "image/jpeg;base64,/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAkGBxIQDw8PDxAPDw8NDQ0NDQ0NDw8NDQ0NFREWFhURFRUYHSggGBolGxUVITEhJSkrLi4uFx8zODMtNygtLisBCgoKDg0OFw8PFysdHR0tLS0tLSstLS0rLS0tKysrLS0tLS0tLS0rLS0rLSstLSstLS0tLSstKy0rLS0tLS0tLf/AABEIAMIBAwMBIgACEQEDEQH/xAAbAAACAwEBAQAAAAAAAAAAAAACAwABBAUGB//EAD8QAAICAQIDBAUJBgUFAAAAAAABAgMRBBITITEFQVFhInGBkaEGFBUyUrHB0fAjkpOiwuEWQnKC8SQ0Q4PS/8QAGgEAAwEBAQEAAAAAAAAAAAAAAAECAwQGBf/EACURAQEAAgICAgIBBQAAAAAAAAABAhEDEhNRITFB8CIEFCNhof/aAAwDAQACEQMRAD8A+f7CbDc6AJUn2JXLcWJoFo0zqFuJSLCdpTQ7aVtGkrBNoeCYGRLgBKBpaAlEaLGbaTA5wBcQSS0TAxxKwGi2AmAsEwPQ2DBMB4KwLR7BgrAeCYDR7ATAeCsC0NltEwHgrAaPYcEwFggaPYMFYGEwGhssmBmCYFobBgkkMZTQaGysEGbSC0e3sdhTgaraWhTgc0y277iyzqM1lJ0WhU4mkyZ5YuXKABvsqM06jWVjliRJAMc4guJTKwvJEE4lYGlTQDiMK2jIlxKcR20FoaaRgmBrrK2AkvBNobRMD0Wy8FYGYJgWj2XgmA8EwGhstoHA3BTQaPZeCYDwVgR7BgmA8EwB7BgvAWC8ANl4JgPBWA0NhwQZggaLb6jdpk10OddpjtytRntimfBw5LHoMsZXCs04iVZ2bKhE6jrx5WGXG5MqxNlZ1p0GedJvjmxywcmdQmUDqTpM86jaZOfLBz3EFo1TrEygayscoVgrAe0mBoBgpxGoLahjTPgjQ6VYLgNNhDiTYOcQWgRYS4gtD2inAZE4JgZtKwPSdl4JgZgpxFo9lNFYGNFYFo9hwVgPBMBo9gwWkFgJIei2XtJtHbQXENDsVggzBA0NvqNulYiUGjqsVOK7zzMzr01xctsBm62hGadRtjlGdjPKIidRpnAVKLRvjWdjHOvAmcDbIBxR0Y5MssdubOsRKk6sqUxM6DbHNhlg5U6RTgdV0sVPTmkzY3BzdpWDZOkU4GkrO4kJjIrJHApLA0fQuGU6ibhkZAPgnhlOs1cinAYuLI6xcqzZKIuSHGdjG4lGmURcqymdhWCsDHErAaLZeCYDwTAj2HBaQWC0hltEiOIe0JRAQjaQfsIBvrtmnwZ7KzrzgZ7KjyW3rHJnWZ50nTtoM1lbNMckWOdKsVKJumjPNm2OTOxjsrM8qjexUoG+GbKxgcQTZOoTKo6Mc5WdxJKcEMcAcGkrO7KlShE9Ma2U2XMqzslc6enEuo6uAJVJmkzZ3By3UC4HRnQJlUXMmVwZEEpjnWLcCkasTJHEFxImNNvsEqwNo/JHEaazuAuVRpcSsD2mxjcSsGzhgypGjqyloc6QHWwIcBiQNaGqAVpj9FkDcCC2b7nZSjNZpzoSgLcDyenpZXLnSzPZT5HYlWKlSJW3Cs05kt0p6GdBms0pUysKzbzlmnETqZ6GzSGWzSG2PKi4OFKLAZ1rNN5GaenN8eWMrhXOkgHE3SoEzqOjHkjK4su0GUB7gVtNZkzuLLKIJrcBcqi5kzsZmwGzRKsW6zSVnYDCYudC7hjgVguVNZpVMXKBsKaLlZXFi2kNbrQDqHtFxZskGypBdRW0gCSBaLTAot1lOsLeErAP4IdY6oLKYOBbE+BOohW5kBW4+8SiKcTVKAuUDyz0UZmgJRNDiLlEWz0zyiKlA1OIDiJWmOcBE6zfKAmVYtnpz7KTNZpl4HUlAVKA5loXHbj2aRGeelO1KsTKs0x5bEXjcSWm8hMtMdyVYqVSNseesrxOI6AeEdeVAuVJtOdleJynWLnWdZ0ip0GuPNGd4q5MqRUqTqzoFSpN8eVleNy3UC4HTlULdJpORleNznErBulQLdJpM4zuFZMFYNTpAdRXZNxrLKvIuVRt4ZNhXZFwc91guB0XWgHUPujx1hwEmaJVAOsOw62FED4ZA2NV9/YuRxYfKzRy6aqn2z2/eXH5SaSUtq1Wn3Y3bXbBPb482eVtvp6eYurIXIxrtWh9L6H6ra3+JnfbmnzjjQ8Orx7+hFtaTF0GLkZK+1KptqFtcmu5SWfZ4hytJuelzA1sXIS71nGVldVlZQuVxNzVOM2QqQqV4mWoF3V4zpCpIzW6xR6tLnjm0ufgYKu11PUXUJL9hXTOcuvpWb8R8uUU/aVMrSuMjpyiKkgHeBK4cyqbhBtC5IF2gStNJlWdwgmgZIXK0XK01mVZXCDlEVKJHcLlea45VlcYqUQHEqVwLuNsc6m8cRwAdZHcC7jWclZ3jgXWLlBBSuPOdo9q3U18Kv6tt+rc24cSTTseIpvosDvNYm8WLu4XPyeH5Pr+ILieU0HbHzetRknZvlxNykn6ONu3n35R1tB27C1TbTrUNmXNrGZJvCx/pZc5mfixrq7AHAyQ7Zpf/lrWM/51n1mvjIuc1HhgXAFwCd6BdyK8tTf6eA2EC4qIHlpf20ef7VptponNPphNqSbSbxlPL58zDoJWPURUnunFSU8v0XiHTqjfquy5beau5tLLnOSflzeAOyezIu2W/iOLTe3dJPOe/ByfOtun8t3zSb54gm+ixW0vfkUtPYvsY6Z/Zp5950Zdi1Y5VX/xHGK/eYH0JCWcOax04k4yX3k94vrWTg2dyT/9j/8AoNOxfaX+m7H9Y+HYK7nW/avzGP5Od+2t+ptP7g74ex1y9McbLc7sybznLty8+vd1HQ12oTbVtqfe/nHN+vvDl8n0v8i8eUs/gB9BR7+X+1P8h/wpfzhv0hqWlm65tc8cZv47RGm+UGplbZXxbGqnze5vrGOF9Tx3DfoWv7aXrriZ9L2VFytzOOFNqPoxWV1z8Q68fr/g78n7XK7e7Q1EmtNK2VlbkrFvcnJbpOKUpYzycse4dpvlFqtLF1zlKyUZ7pN4m+Hsjz3NZeOfXwE9p0bb4x9GUVwue2PXfnux4Ce139VbViVuz0Vt9Fyi3nx6YJvHh6TM8/b1D+Utqw3ZHn0zWky38pbftR/h/wBxHafZ2FQ4Rb/6mlTzJcq3lNrwfM6X0TDu3L/cvyFrh9NO3L7Zf8SWeMf3H+YH+IbftJ+Tr6Gxdkx+1P8Ae5Y9w6vQRj9r95j/AMM/A3ye3K1Pygsccp84pvEIelP35Ey+UtjlXDlHc5xcnH6zSUk8YfXLXd0O66orovxPJdsXZ7Q00IxeKpwzLnjdLm168KLFvD8Yle0+66E/lFbxJVRSsmoRkoqDy5PCx0WOsfeVqe1ZzUZelDEZNuEmk8NZ9eMNd4q2vh67jcnGdahh4yppOax/CfvNXZFO6iCsit8dymmsPMnnmvNNP2jmvvQ+frbn6jtS6nZGVjfElti5JTaS6vmvFx6j9b2tbXFuTkuj9FVvbHnlvx6dAe3aM2adR6RsjZLk2n+0hFL+Z+5nQ1ujVkGsJvGY5+1h4+8e97L59sf03PdFYXpS9HEfSa8OvrEWdr3yUmoutxcorMXKMsLOWlnw8ToWaNb4SSWIv0ljuSeMe1iZaJRjZjLy5zWe5tDL5K03buVHi1WVuUtr5Nr4peDFz7XhFzi5Nxs3qElXKOG9zaln1rp5mjRUzUIb3iUZOT29GueF8TkdvUuW2Skk422RWXjEnzTWOfcuZGeMsmzmVn05dzThWk+cVKM14S3Npe5oVKLjlPl3Pnyb6d3LxA0cZqUpNZTbUs45vPX7zqWS4kpS2LlGCku7KilnH4jkZVy9rfdy9h1dTrbJqDVjjKWd0YScIxS+r0fLPPl5CtkefoYz17uXsNFvZUUk1F81nk2adbv4qZfj6SvtO6EYrKn0w5KTck8t5k35pez37a+2ISlteY8ouLkmt2eq9hzl2SmsrcvLkKn2X6W3dLkk1yXLmFx5Papn/p2vpOv7a5NrpPx9RDiy7Gf2v5f7lB15P3R+SenuNblpLK68koy/qwL7LoeZOK8sval19o6yxR6ygvL0YjtJqIpcmvflHNuzHUdXx22coWLujnyxt+7JIzt70l6pbvyL+cp9/uyLepXivesmer6Xcp7Duu553euMl9zZcHPvlZ552r+p/cU9QBLUl9b6R3h73ePvw/wLxLxj8UY3qgZavzKnHU3Nvk/Ha/YZ41pZ5LnKT6J9fYZfnT8fwQD1Pn+Zc4qi5xm13ZrnOLUsc459hxtfT6dUOf8A3nBm33xlteV7Mo9F84/TOZ2hVvnS0vq3RtlLPL0V3/A16ZMrY6PaVj36aMF9bUJyfN4hGEm/UdPj4ORO5Nxbw3Ftxfg2sFvVi8KvLHVeoAd5ynqvUB86KnAm80dWVp5u/tDZqfm7Vjdl9dqnu5bXFfjFr1I3/Oji65OWsoly9GEm/ZnHxaC8Wk+XZ9l8rNXcsvbRUpxSbTdiXLp1XOXLvOt2bqeJF3fV4qilHvUY5XXv5tnMntg7bVHdKde2SXWXL7+nuGaGThVCGU9kVHKXIqcPz8p80V27qHG3T7c/tJRg9rxzVkGn7t37zOyrzz+ui7J0yTwqpuTXjy/t8TV84HOH5pXndR3ICVqOY9QVxy/FE3nb1Zhdc+tL8Dg9u2bVHkt0rLHnH+XC9H34NrvM2ogpyi2+UNzx45FnxbgnO5fZMpO2VcksZcm8Llh4x8UdvT0pWTfJQcYxXLm2u8zU0xhKcl1m8t9B/FDHi19pvM0OpfrAal+uZlVwLuL6jyte4XKSzn2GZ3FcUOo8rXvIZOKULqPK7iiscvgkl8EMjPHevi/xObxs/wDH4lcX9Zyzn6Ovu6M558H68fimC7Md79W5493T4HNd2e9sp3NeRU403N0pWvxwvJYfvAVmO9v1vLOZK9+OfewXqPN/7Ul+ZUwTeR05XfpvK+8DiPv/AJUcx6jw5fFgu4qYIvI6bt/XIB2vxOa7fP4lcZ+JekXN0He14g/OGc+Vj8fuJxX5fEaLW53sF3sxStZTu9RRWtjuZOL4mF3v/griglud/gCpmTjYBd4bJu4oErjFxiuIGya3eC7jLxCt4di1Wp3FO0zbyOYdhqtHFL4pm3E3i7DrWjjE4pl4hXEDuOrXxinaZOITeLufVq4hOIZdwWRdh1P3kEZIHYdXT4q75exFPUruXveTncReb+CL43kvvM46ttzvb/XIB2eL9xkdrfeVuHsml2guwz70VxB7I9zKcxG8m8OxaO3E3COIDvDsNNG8m8z7ytwuxdWh2gOYpMvIdx1MUiOYtzJkO46j3FZFuRW4XcdDcl7hKmC5i7n0O3E3iN5Nwuw6nbybxG4vIdj6m7ybhTZW4XYdTdxNwrJeQ7H1MyTIvJW4Ow6nZL3CNxMi7DqfuIJyUHYdTSkQhQOQLIQYAwokIIBZTKIAQpkIILRCEEYmAUQCWi5EIJQSEIAUgWQghFEIQKayFkEFMpEIAQhCAEZTLIAUy0QgARCEAP/Z",
        "installs": {
          "device_token": "abc",
          "fcm_token": "dsadascsfafawdsad"
        },
        "last_name": "name",
        "login_type": "email",
        "password": "12345",
        "referral_code": "QPJmbpvw",
        "social_id": ""
      },
      "properties": {
        "email": {
          "description": "email",
          "type": "string"
        },
        "first_name": {
          "description": "first name",
          "type": "string"
        },
        "image": {
          "description": "base64 image",
          "type": "string"
        },
        "is_referral": {
          "description": "if valid refferal code",
          "type": "boolean"
        },
        "last_name": {
          "description": "last name",
          "type": "string"
        },
        "login_type": {
          "description": "type of account, use one of the following: email, facebook, apple, google",
          "type": "string"
        },
        "password": {
          "description": "password",
          "type": "string"
        },
        "referral_code": {
          "description": "validated refferal code",
          "type": "string"
        },
        "social_id": {
          "description": "social id if user signs up by social account",
          "type": "string"
        }
      },
      "title": "Sign in User Schema",
      "type": "object"
    },
    "Permission": {
      "description": "Permission",
      "example": {
        "id": "cbe2d554-b72b-4a46-82ac-61fd0121d348",
        "permission": -1,
        "resource_id": "users",
        "role_id": "super_admin"
      },
      "title": "Permission",
      "type": "object"
    },
    "CreateUserFavorite": {
      "description": "Create a User Favourite",
      "example": {
        "address": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
        "description": "This is a first description test",
        "image": "",
        "name": "Name",
        "user_favorite_type_id": "restaurant || city || activity"
      },
      "properties": {
        "address": {
          "description": "Address",
          "type": "string"
        },
        "description": {
          "description": "Description of User Favourite",
          "type": "string"
        },
        "image": {
          "description": "base64 image",
          "type": "string"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "user_favorite_type_id": {
          "description": "User Favourite Type id",
          "type": "string"
        }
      },
      "title": "Create User Favourite",
      "type": "object"
    },
    "ListLikes": {
      "description": "See people who liked the post or comment",
      "example": [
        {
          "first_name": "First name",
          "last_name": "Last name",
          "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
          "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
        },
        {
          "first_name": "First name",
          "last_name": "Last name",
          "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
          "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
        }
      ],
      "title": "List Likes",
      "type": "object"
    },
    "Follow": {
      "description": "Follow",
      "example": {
        "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
        "firstName": "Super",
        "isActive": true,
        "lastName": "Admin",
        "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
        "userImage": "20a6f452-4dca-4c89-9ede-0002c621168b--637070709605545548--97df1b3e-9a0b-4475-8cf7-4b5356b4829d"
      },
      "title": "Follow",
      "type": "object"
    },
    "CreatePost": {
      "description": "Create a Post",
      "example": {
        "address_components": [],
        "description": "Here is description about the post",
        "formatted_address": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
        "is_old_moment": false,
        "is_shared": false,
        "latitude": 0.0,
        "longitude": 0.0,
        "place_id": "",
        "shoutout_guid": "",
        "shoutout_images": [
          ""
        ],
        "shoutout_type_id": "a48b801b-55b7-58ff-b3cc-e0e06a77f28a",
        "title": "First Post",
        "url": ""
      },
      "properties": {
        "address_components": {
          "description": "Address components array of maps with types and long_name",
          "type": "map"
        },
        "description": {
          "description": "Description of post",
          "type": "string"
        },
        "formatted_address": {
          "description": "Complete formatted address",
          "type": "string"
        },
        "is_deleted": {
          "description": "IS_Deleted i.e true or false",
          "type": "boolean"
        },
        "is_old_moment": {
          "description": "Is Old Moment",
          "type": "boolean"
        },
        "is_shared": {
          "description": "IS_Shared i.e true or false",
          "type": "boolean"
        },
        "latitude": {
          "description": "location latitude points",
          "type": "float"
        },
        "longitude": {
          "description": "location latitude points",
          "type": "float"
        },
        "place_id": {
          "description": "Place ID",
          "type": "string"
        },
        "shoutout_guid": {
          "description": "Shoutout Guid",
          "type": "string"
        },
        "shoutout_images": {
          "description": "List of images in base64 format",
          "type": "map"
        },
        "shoutout_type_id": {
          "description": "Shoutout type id",
          "type": "string"
        },
        "title": {
          "description": "Post title",
          "type": "string"
        },
        "url": {
          "description": "Google map URL",
          "type": "string"
        }
      },
      "title": "Create New Post",
      "type": "object"
    },
    "UpdateUserFavorite": {
      "description": "Update User Favourite",
      "example": {
        "address": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
        "description": "This is a first description test",
        "image": "",
        "name": "Name"
      },
      "properties": {
        "address": {
          "description": "Address",
          "type": "string"
        },
        "description": {
          "description": "Description of User Favourite",
          "type": "string"
        },
        "image": {
          "description": "base64 image",
          "type": "string"
        },
        "name": {
          "description": "Name",
          "type": "string"
        }
      },
      "title": "Update User Favourite",
      "type": "object"
    },
    "RequestAdmin": {
      "description": "Send an email to admin if a user's account got deactivated",
      "example": {
        "description": "The reason why my account got deactivated",
        "user_email": "test@jetzy.com"
      },
      "properties": {
        "description": {
          "description": "Details about account deactivation",
          "type": "string"
        },
        "user_email": {
          "description": "User's Email ID",
          "type": "string"
        }
      },
      "required": [
        "description",
        "user_email"
      ],
      "title": "Send Mail to admin",
      "type": "object"
    },
    "UpdateRole": {
      "description": "Update Role",
      "example": {
        "permissions": [
          {
            "permission": -1,
            "resource_id": "users",
            "role_id": "admin"
          }
        ],
        "role": "Admin"
      },
      "properties": {
        "permissions": {
          "description": "List Of Permissions",
          "type": "array"
        },
        "role": {
          "description": "Role",
          "type": "string"
        }
      },
      "title": "Update Role",
      "type": "object"
    },
    "RewardOffer": {
      "description": "Reward Offer Details",
      "example": {
        "ResponseData": {
          "event_end_date": "2022-05-06",
          "event_start_date": "2022-05-02",
          "imagePath": "a11519fb-69bd-4503-a1f2-029f43692044--637287148448444851--6f677db8-2a53-40fb-aeb8-efdc857eac8f",
          "is_pinned": false,
          "is_redeemed": false,
          "latitude": 40.721546,
          "link": "http://jetzy.com",
          "location": "254, Broadway, New York, NY 10007, USA",
          "longitude": -74.00145987,
          "multi_redeem_allowed": false,
          "offerDescription": "Offer Description",
          "offerName": "June 25th - 6pm EST Yin Yoga Class with Hana Sykorova",
          "pointRequired": 1,
          "price_of_ticket": 2000,
          "rewardOfferId": "a11519fb-69bd-4503-a1f2-029f43692044",
          "status": {
            "status": "Active",
            "status_id": "23453782-ff3f-43f9-823d-6789afcfb3a0"
          },
          "tier_id": "af17c445-4c56-4e66-bee3-00d496768efg"
        }
      },
      "title": "Reward Offer Details",
      "type": "object"
    },
    "Create": {
      "description": "Create a Frequently Asked Question",
      "example": {
        "answer": "we connect people",
        "category": "about us",
        "image_name": "",
        "question": "How are we?"
      },
      "properties": {
        "answer": {
          "description": "Answer",
          "type": "string"
        },
        "category": {
          "description": "category",
          "type": "string"
        },
        "id": {
          "description": "Frequently Asked Question ID",
          "type": "string"
        },
        "question": {
          "description": "Question",
          "type": "string"
        }
      },
      "title": "Create New Frequently Asked Question",
      "type": "object"
    },
    "ChatMessage": {
      "description": "Comments or Messages By Room ID",
      "example": {
        "responseData": {
          "data": [
            {
              "callbackVerification": "here we go",
              "message": "here is a message",
              "messageId": "215f1fb5-69ee-4f53-a81f-c277c3f048fa",
              "messageImages": [],
              "user": {
                "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                "firstName": "test",
                "lastName": "user",
                "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
                "userImage": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
              }
            },
            {
              "callbackVerification": "here we go",
              "message": "Here is a message",
              "messageId": "215f1fb5-69ee-4f53-a81f-c277c3f048fa",
              "messageImages": [],
              "user": {
                "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                "firstName": "test",
                "lastName": "user",
                "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
                "userImage": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
              }
            }
          ],
          "pagination": {
            "page": 1,
            "totalPages": 1,
            "totalRows": 2
          }
        }
      },
      "title": "Comments or Messages by Room ID",
      "type": "object"
    },
    "CreatePermission": {
      "description": "Create Permission",
      "example": {
        "permission": 4,
        "resource_id": "comments",
        "role_id": "super_admin"
      },
      "properties": {
        "permission": {
          "description": "Permission",
          "type": "integer"
        },
        "resource_id": {
          "description": "Resource ID",
          "type": "string"
        },
        "role_id": {
          "description": "Role ID",
          "type": "string"
        }
      },
      "title": "Create Permission",
      "type": "object"
    },
    "UserEmailInput": {
      "description": "User Email Verification",
      "example": {
        "user_id": "aef03ca4-31dc-453d-a00c-937c896d53e8"
      },
      "properties": {
        "user_id": {
          "description": "User_ID",
          "type": "string"
        }
      },
      "title": "User Email Verification",
      "type": "object"
    },
    "SyncContactsResponse": {
      "description": "Contact Sync",
      "example": {
        "responseData": {
          "existingContacts": [
            {
              "baseUrl": "null",
              "email": "superadmin@jetzy.com",
              "firstName": "Super",
              "imageName": "null",
              "lastName": "Admin",
              "userId": "a711bf85-963f-42ed-9728-c2047d5694fb"
            }
          ],
          "nonExistingContacts": [
            {
              "baseUrl": "null",
              "email": "superadmin23@jetzy.com",
              "firstName": "null",
              "imageName": "null",
              "lastName": "null",
              "userId": "null"
            },
            {
              "baseUrl": "null",
              "email": "superadmin@jetzy.com",
              "firstName": "null",
              "imageName": "null",
              "lastName": "null",
              "userId": "null"
            }
          ]
        }
      },
      "title": "Contact Sync",
      "type": "object"
    },
    "ShowEventByUserID": {
      "description": "List Of Events By User ID",
      "example": {
        "response_data": [
          {
            "interestEvents": [
              {
                "FormattedAddress": "ajsjsjdkds",
                "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                "description": "Event testing",
                "eventAttendees": [
                  {
                    "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                    "firstName": "test",
                    "lastName": "user",
                    "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
                    "userImage": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
                  },
                  {
                    "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                    "firstName": "test",
                    "lastName": "user",
                    "userId": "b711bf85-963f-42ed-9728-c2047d5694fc",
                    "userImage": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
                  }
                ],
                "eventEndDate": "2018-08-02",
                "eventEndTime": "13:00:00",
                "eventStartDate": "2018-08-02",
                "eventStartTime": "08:00:00",
                "id": "3075bfea-63cc-11ec-90d6-0242ac120003",
                "interestId": "0f9165b8-9b72-4551-9e52-f69a61bd8e97",
                "interestName": "Movie Buff",
                "latitude": 687.0,
                "longitude": 345.0,
                "roomId": "9577ce5c-63cb-11ec-90d6-0242ac120003",
                "user": {
                  "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                  "firstName": "Super",
                  "lastName": "Admin",
                  "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
                  "userImage": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
                },
                "userEventImages": [
                  {
                    "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                    "id": "a711bf85-963f-42ed-9728-c2047d5694fb",
                    "image": "user_event/b3e280a5-7808-41fb-8c64-8ee46273ccf4.png"
                  }
                ]
              }
            ],
            "interestId": "0f9165b8-9b72-4551-9e52-f69a61bd8e97",
            "interestName": "Movie Buff"
          }
        ]
      },
      "title": "List Of Events By User ID",
      "type": "object"
    },
    "Follows": {
      "description": "List of Follows",
      "example": [
        {
          "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
          "firstName": "Super",
          "isActive": true,
          "lastName": "Admin",
          "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
          "userImage": "20a6f452-4dca-4c89-9ede-0002c621168b--637070709605545548--97df1b3e-9a0b-4475-8cf7-4b5356b4829d"
        },
        {
          "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
          "firstName": "Super",
          "isActive": true,
          "lastName": "Admin",
          "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
          "userImage": "20a6f452-4dca-4c89-9ede-0002c621168b--637070709605545548--97df1b3e-9a0b-4475-8cf7-4b5356b4829d"
        }
      ],
      "title": "Follows",
      "type": "object"
    },
    "UserChatRoom": {
      "description": "Chat messages",
      "example": {
        "ResponseData": {
          "chatMessages": {
            "data": [
              {
                "callbackVerification": "here we go",
                "message": "",
                "messageId": "3dac012f-e4f7-4f27-9745-1567af719eea",
                "messageImages": [],
                "messageTime": "2021-12-23T09:50:48Z",
                "user": {
                  "firstName": "",
                  "lastName": "",
                  "userId": "a711bf85-963f-42ed-9728-c2047d5694fb"
                }
              },
              {
                "callbackVerification": "here we go",
                "message": "",
                "messageId": "3dac012f-e4f7-4f27-9745-1567af719ecb",
                "messageImages": [],
                "messageTime": "2021-12-23T09:50:48Z",
                "user": {
                  "firstName": "",
                  "lastName": "",
                  "userId": "a711bf85-963f-42ed-9728-c2047d5694ab"
                }
              }
            ],
            "pagination": {
              "page": 1,
              "totalPages": 1,
              "totalRows": 2
            }
          },
          "roomId": "de856c10-b458-49de-ba1d-71a95ca6acb7",
          "roomUsers": [
            {
              "firstName": "",
              "lastName": "",
              "userId": "a711bf85-963f-42ed-9728-c2047d5694fb"
            },
            {
              "firstName": "",
              "lastName": "",
              "userId": "a711bf85-963f-42ed-9728-c2047d5694fc"
            }
          ]
        }
      },
      "title": "Chat messages",
      "type": "object"
    },
    "CreateEvent": {
      "description": "Create a Event",
      "example": {
        "FormattedAddress": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
        "description": "This is a first description test",
        "eventEndDate": "2022-01-10",
        "eventEndTime": "22:15:47",
        "eventStartDate": "2022-01-07",
        "eventStartTime": "16:15:47",
        "event_images": [
          ""
        ],
        "interestId": "c2bedfc2-7db3-4e28-bf87-dd2de088526d",
        "latitude": 31.5656822,
        "longitude": 74.3141829
      },
      "properties": {
        "description": {
          "description": "Description of event",
          "type": "string"
        },
        "event_end_date": {
          "description": "Event End Date",
          "type": "date"
        },
        "event_end_time": {
          "description": "Event End Time",
          "type": "time"
        },
        "event_images": {
          "description": "List of images in base64 format",
          "type": "map"
        },
        "event_start_date": {
          "description": "Event Start Date",
          "type": "date"
        },
        "event_start_time": {
          "description": "Event Start Time",
          "type": "time"
        },
        "formatted_address": {
          "description": "Formatted Address",
          "type": "string"
        },
        "interest_id": {
          "description": "Interest id",
          "type": "string"
        },
        "latitude": {
          "description": "location latitude points",
          "type": "float"
        },
        "longitude": {
          "description": "location latitude points",
          "type": "float"
        }
      },
      "title": "Create New Event",
      "type": "object"
    },
    "User": {
      "description": "User Schema",
      "example": {
        "activities": [],
        "cities": [
          {
            "address": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
            "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
            "description": "This is a first description test",
            "id": "eac7424c-b188-4097-89d7-d4fc008a91c3",
            "image": "user-favorite-4b5b28da-879b-4198-ace0-13db112555aa.jpg",
            "name": "bruh",
            "userId": "a17bc893-60e4-4102-99d2-ed701c06373e",
            "user_favorite_type_id": "city"
          }
        ],
        "current_city": "USA",
        "current_country": "phila",
        "email": "superadmin@jetzy.com",
        "employer": "Product Manager",
        "followings_count": "0",
        "friends_count": "0",
        "gender": "male",
        "id": "1",
        "is_active": true,
        "latestInterests": [
          "Pakistani Professionals",
          "Pakistani Entrepreneurs",
          "My group",
          "Jetzy team 2021",
          "Sports"
        ],
        "name": "Super Admin",
        "phone_number": "nil",
        "restaurants": [
          {
            "address": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
            "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
            "description": "This is a first description test",
            "id": "a570fbf8-66b0-4624-a4fa-3b5827cbf452",
            "image": "user-favorite-802bfb27-39e1-489d-b011-bb710f606d91.jpg",
            "name": "bruh",
            "userId": "a17bc893-60e4-4102-99d2-ed701c06373e",
            "user_favorite_type_id": "restaurant"
          },
          {
            "address": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
            "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
            "description": "This is a first description test",
            "id": "325c84a1-7b90-49fd-8f30-6f7255c0b5fd",
            "image": "user-favorite-29a9ffd4-77db-4e1e-87fc-21856293aab1.jpg",
            "name": "bruh1",
            "userId": "a17bc893-60e4-4102-99d2-ed701c06373e",
            "user_favorite_type_id": "restaurant"
          }
        ],
        "roles": [
          "owner",
          "admin"
        ],
        "scholl": "Brown University",
        "userEvents": [
          {
            "interestEvents": [
              {
                "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                "description": "Event testing",
                "eventAttendees": [
                  {
                    "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                    "firstName": "test",
                    "lastName": "user",
                    "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
                    "userImage": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
                  },
                  {
                    "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                    "firstName": "test",
                    "lastName": "user",
                    "userId": "b711bf85-963f-42ed-9728-c2047d5694fc",
                    "userImage": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
                  }
                ],
                "eventEndDate": "2018-08-02",
                "eventEndTime": "13:00:00",
                "eventStartDate": "2018-08-02",
                "eventStartTime": "08:00:00",
                "formatedAddress": "ajsjsjdkds",
                "id": "3075bfea-63cc-11ec-90d6-0242ac120003",
                "image": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg",
                "interestId": "0f9165b8-9b72-4551-9e52-f69a61bd8e97",
                "interestName": "Movie Buff",
                "latitude": 687.0,
                "longitude": 345.0,
                "roomId": "9577ce5c-63cb-11ec-90d6-0242ac120003",
                "user": {
                  "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                  "firstName": "Super",
                  "lastName": "Admin",
                  "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
                  "userImage": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
                }
              }
            ],
            "interestId": "0f9165b8-9b72-4551-9e52-f69a61bd8e97",
            "interestName": "Movie Buff"
          }
        ]
      },
      "properties": {
        "approval_status": {
          "description": "Approval Status",
          "type": "string"
        },
        "created_date": {
          "description": "Created Date",
          "type": "date"
        },
        "current_city": {
          "description": "Current City",
          "type": "string"
        },
        "current_country": {
          "description": "Current Country",
          "type": "string"
        },
        "current_jwt": {
          "description": "Current JWT",
          "type": "string"
        },
        "dob": {
          "description": "Date Of Birth",
          "type": "date"
        },
        "dob_full": {
          "description": "Full Date OF Birth",
          "type": "string"
        },
        "email": {
          "description": "Email",
          "type": "string"
        },
        "employer": {
          "description": "Product Manager",
          "type": "string"
        },
        "first_name": {
          "description": "First Name",
          "type": "string"
        },
        "friend_code": {
          "description": "Friend Code",
          "type": "string"
        },
        "gender": {
          "description": "Gender",
          "type": "string"
        },
        "home_town_city": {
          "description": "Home Town City",
          "type": "string"
        },
        "home_town_country": {
          "description": "Home Town Country",
          "type": "string"
        },
        "id": {
          "description": "id",
          "type": "integer"
        },
        "image_name": {
          "description": "Image Name",
          "type": "string"
        },
        "is_active": {
          "description": "Is Account active or not",
          "type": "boolean"
        },
        "is_deactivated": {
          "description": "Is Deactivated",
          "type": "boolean"
        },
        "is_email_verified": {
          "description": "Email Verified",
          "type": "boolean"
        },
        "is_referral": {
          "description": "Is Referred",
          "type": "boolean"
        },
        "last_name": {
          "description": "Last Name",
          "type": "string"
        },
        "latitude": {
          "description": "Lat",
          "type": "float"
        },
        "login_type": {
          "description": "Login Type",
          "type": "string"
        },
        "longitude": {
          "description": "Long",
          "type": "float"
        },
        "panic_message": {
          "description": "Panic Message",
          "type": "string"
        },
        "password": {
          "description": "Password",
          "type": "string"
        },
        "quick_blox_id": {
          "description": "Quick Blox ID",
          "type": "string"
        },
        "quick_blox_password": {
          "description": "Quick Blox Password",
          "type": "string"
        },
        "referral_code": {
          "description": "Referral Code",
          "type": "string"
        },
        "school": {
          "description": "School",
          "type": "string"
        },
        "social_id": {
          "description": "Social ID",
          "type": "string"
        },
        "user_about": {
          "description": "User About",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "title": "User Schema",
      "type": "object"
    },
    "CreateRewardOffer": {
      "description": "Create a Reward Offer",
      "example": {
        "event_end_date": "2022-05-06",
        "event_start_date": "2022-05-02",
        "imageName": "a11519fb-69bd-4503-a1f2-029f43692044--637287148448444851--6f677db8-2a53-40fb-aeb8-efdc857eac8f",
        "is_pinned": false,
        "latitude": 40.721546,
        "link": "http://jetzy.com",
        "location": "254, Broadway, New York, NY 10007, USA",
        "longitude": -74.00145987,
        "multi_redeem_allowed": false,
        "offerDescription": "<p class=\"p1\" style=\"margin: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: normal; font-family: &quot;Helvetica Neue&quot;; color: rgb(0, 0, 0);\">\n Join Hana for a FREE live online 60-minute yin yog",
        "offerName": "June 25th - 6pm EST Yin Yoga Class with Hana Sykorova",
        "pointRequired": 1,
        "price_of_ticket": 2000,
        "status_id": "af17c445-4c56-4e66-bee3-00d496768efg",
        "tier_id": "af17c445-4c56-4e66-bee3-00d496768efg"
      },
      "properties": {
        "event_end_date": {
          "description": "event_end_date",
          "type": "string"
        },
        "event_start_date": {
          "description": "event_start_date",
          "type": "string"
        },
        "imageName": {
          "description": "Name of image",
          "type": "string"
        },
        "is_pinned": {
          "description": "is_pinned",
          "type": "boolean"
        },
        "latitude": {
          "description": "latitude",
          "type": "integer"
        },
        "link": {
          "description": "link",
          "type": "string"
        },
        "location": {
          "description": "location",
          "type": "string"
        },
        "longitude": {
          "description": "longitude",
          "type": "integer"
        },
        "multi_redeem_allowed": {
          "description": "multi_redeem_allowed",
          "type": "boolean"
        },
        "offerDescription": {
          "description": "Create Reward Offer Details",
          "type": "string"
        },
        "offerName": {
          "description": "offerName",
          "type": "string"
        },
        "pointRequired": {
          "description": "pointRequired",
          "type": "integer"
        },
        "price_of_ticket": {
          "description": "price_of_ticket",
          "type": "integer"
        },
        "status_id": {
          "description": "status_id",
          "type": "string"
        },
        "tier_id": {
          "description": "tier_id",
          "type": "string"
        }
      },
      "title": "Create Reward Offer",
      "type": "object"
    },
    "InviteCodeResponse": {
      "example": {
        "message": "Invite code is verified.",
        "success": true
      },
      "title": "Invite Code Response",
      "type": "object"
    },
    "Friends": {
      "description": "List of Friends",
      "example": [
        {
          "created_date": "2021-11-07",
          "friend_blocked": false,
          "id": "3a3a53d-1d55-40c2-b955-57f8d7be0232",
          "is_blocked": false,
          "is_friend": true,
          "is_request_sent": true,
          "user_id": "3a3a53d-1d55-40c2-b955-57f8d7be0233"
        },
        {
          "created_date": "2021-11-07",
          "friend_blocked": false,
          "id": "3a3a53d-1d55-40c2-b955-57f8d7be0232",
          "is_blocked": false,
          "is_friend": true,
          "is_request_sent": true,
          "user_id": "3a3a53d-1d55-40c2-b955-57f8d7be0233"
        }
      ],
      "title": "Friends",
      "type": "object"
    },
    "GetFollow": {
      "description": "Get List of Follower/Followed",
      "example": {
        "followed_id": "3a3a53d-1d55-40c2-b955-57f8d7be0232",
        "following_id": "3a3a53d-1d55-40c2-b955-57f8d7be0232"
      },
      "properties": {
        "followed_id": {
          "description": "Followed ID",
          "type": "string"
        },
        "follower_id": {
          "description": "Follower ID",
          "type": "string"
        }
      },
      "title": "Get List of Follower/Followed",
      "type": "object"
    },
    "Reply": {
      "description": "Reply to a RoomMessage on a Post",
      "example": {
        "responseData": {
          "comment_id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
          "description": "Thanks a lot!",
          "id": "",
          "inserted_at": "",
          "updated_at": "",
          "user": {
            "base_url": "https://tanbits-jetzy.s3.amazonaws.com/",
            "first_name": "First Name",
            "last_name": "Last Name",
            "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
            "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
          }
        }
      },
      "title": "RoomMessage Reply",
      "type": "object"
    },
    "UpdateEvent": {
      "description": "Update Event",
      "example": {
        "FormattedAddress": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
        "description": "This is a first description test",
        "eventEndDate": "2022-01-10",
        "eventEndTime": "22:15:47",
        "eventStartDate": "2022-01-07",
        "eventStartTime": "16:15:47",
        "event_images": [
          ""
        ],
        "interestId": "c2bedfc2-7db3-4e28-bf87-dd2de088526d",
        "latitude": 31.5656822,
        "longitude": 74.3141829
      },
      "properties": {
        "description": {
          "description": "Description of event",
          "type": "string"
        },
        "event_end_date": {
          "description": "Event End Date",
          "type": "date"
        },
        "event_end_time": {
          "description": "Event End Time",
          "type": "time"
        },
        "event_images": {
          "description": "List of images in base64 format",
          "type": "map"
        },
        "event_start_date": {
          "description": "Event Start Date",
          "type": "date"
        },
        "event_start_time": {
          "description": "Event Start Time",
          "type": "time"
        },
        "formatted_address": {
          "description": "Formatted Address",
          "type": "string"
        },
        "interest_id": {
          "description": "Interest id",
          "type": "string"
        },
        "latitude": {
          "description": "location latitude points",
          "type": "float"
        },
        "longitude": {
          "description": "location latitude points",
          "type": "float"
        }
      },
      "title": "Update Event",
      "type": "object"
    },
    "UpdatePost": {
      "description": "Update Post",
      "example": {
        "address_components": [],
        "description": "Here is a description about the post",
        "formatted_address": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
        "latitude": 0.0,
        "longitude": 0.0,
        "place_id": "",
        "shoutout_images": [],
        "title": "First Post",
        "url": ""
      },
      "properties": {
        "address_components": {
          "description": "Address components array of maps with types and long_name",
          "type": "map"
        },
        "description": {
          "description": "Description of post",
          "type": "string"
        },
        "formatted_address": {
          "description": "Complete formatted address",
          "type": "string"
        },
        "latitude": {
          "description": "location latitude points",
          "type": "float"
        },
        "longitude": {
          "description": "location latitude points",
          "type": "float"
        },
        "place_id": {
          "description": "Place ID",
          "type": "string"
        },
        "shoutout_images": {
          "description": "List of images in base64 format",
          "type": "map"
        },
        "title": {
          "description": "Post title",
          "type": "string"
        },
        "url": {
          "description": "Google map URL",
          "type": "string"
        }
      },
      "title": "Update Post",
      "type": "object"
    },
    "ShowEventAttendees": {
      "description": "Event Attendees",
      "example": {
        "response_data": {
          "data": [
            {
              "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
              "firstName": "test",
              "isMember": true,
              "lastName": "user",
              "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
              "userImage": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
            },
            {
              "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
              "firstName": "test",
              "isMember": false,
              "lastName": "user",
              "userId": "b711bf85-963f-42ed-9728-c2047d5694fc",
              "userImage": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
            }
          ],
          "privateChatRoom": {
            "roomId": "73914fed-d79e-4a01-b9a8-79b59737158c",
            "roomType": "event_chat",
            "roomUsers": [
              {
                "firstName": "Super",
                "lastName": "Admin",
                "roomId": "73914fed-d79e-4a01-b9a8-79b59737158c",
                "userId": "a711bf85-963f-42ed-9728-c2047d5694fb"
              }
            ],
            "userEvent": {
              "FormattedAddress": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
              "description": "This is a first description test",
              "eventAttendees": [],
              "eventEndDate": "2022-01-10",
              "eventEndTime": "22:15:47",
              "eventStartDate": "2022-01-07",
              "eventStartTime": "16:15:47",
              "id": "5855e460-2e73-46a6-95bd-18bae67d89ac",
              "interestId": "c2bedfc2-7db3-4e28-bf87-dd2de088526d",
              "interestName": "Winter Sports",
              "latitude": 31.5656822,
              "longitude": 74.3141829,
              "roomId": "70086df1-f42f-4fc7-bdf7-5dbffc84deb9",
              "user": {
                "firstName": "Super",
                "lastName": "Admin",
                "userId": "a711bf85-963f-42ed-9728-c2047d5694fb"
              },
              "userEventImages": [
                {
                  "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                  "id": "a711bf85-963f-42ed-9728-c2047d5694fb",
                  "image": "user_event/b3e280a5-7808-41fb-8c64-8ee46273ccf4.png"
                }
              ]
            }
          },
          "userEvent": {
            "FormattedAddress": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
            "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
            "description": "This is a first description test",
            "eventAttendees": [],
            "eventEndDate": "2022-01-10",
            "eventEndTime": "22:15:47",
            "eventStartDate": "2022-01-07",
            "eventStartTime": "16:15:47",
            "id": "d822b84d-a76a-446a-9daa-ab85fe537fea",
            "interestId": "c2bedfc2-7db3-4e28-bf87-dd2de088526d",
            "interestName": "Winter Sports",
            "latitude": 31.5656822,
            "longitude": 74.3141829,
            "room_id": "",
            "user": {
              "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
              "firstName": "test",
              "lastName": "user",
              "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
              "userImage": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
            },
            "userEventImages": [
              {
                "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                "id": "a711bf85-963f-42ed-9728-c2047d5694fb",
                "image": "user_event/b3e280a5-7808-41fb-8c64-8ee46273ccf4.png"
              }
            ]
          }
        }
      },
      "title": "Event Attendees",
      "type": "object"
    },
    "Block": {
      "description": "Blocked User",
      "example": {
        "first_name": "First Name",
        "is_active": true,
        "last_name": "Last Name",
        "user_id": "b640adbb-75a3-47a4-b3b3-77ef718d2ah1",
        "user_image": ""
      },
      "title": "Blocked User",
      "type": "object"
    },
    "ListRole": {
      "description": "List Of Roles",
      "example": [
        {
          "id": "admin",
          "name": "Admin",
          "permissions": [
            {
              "permission": -1,
              "resource_id": "users",
              "role_id": "super_admin"
            },
            {
              "permission": -1,
              "resource_id": "employees",
              "role_id": "super_admin"
            },
            {
              "permission": -1,
              "resource_id": "customer",
              "role_id": "super_admin"
            }
          ]
        },
        {
          "id": "super_admin",
          "name": "Super Admin",
          "permissions": [
            {
              "permission": -1,
              "resource_id": "users",
              "role_id": "super_admin"
            },
            {
              "permission": -1,
              "resource_id": "employees",
              "role_id": "super_admin"
            },
            {
              "permission": -1,
              "resource_id": "customer",
              "role_id": "super_admin"
            }
          ]
        }
      ],
      "title": "List Of Roles",
      "type": "object"
    },
    "ListEvent": {
      "description": "List Of Events",
      "example": {
        "response_data": [
          {
            "interestEvents": [
              {
                "FormattedAddress": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
                "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                "description": "This is a first description test",
                "eventEndDate": "2022-01-10",
                "eventEndTime": "22:15:47",
                "eventStartDate": "2022-01-07",
                "eventStartTime": "16:15:47",
                "id": "d822b84d-a76a-446a-9daa-ab85fe537fec",
                "interestId": "f6c16a76-3896-43b1-941f-1b11bea24d81",
                "interestName": "Photographer",
                "latitude": 31.5656822,
                "longitude": 74.3141829,
                "room_id": "",
                "user": {
                  "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                  "firstName": "test",
                  "lastName": "user",
                  "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
                  "userImage": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
                },
                "userEventImages": [
                  {
                    "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                    "id": "a711bf85-963f-42ed-9728-c2047d5694fb",
                    "image": "user_event/b3e280a5-7808-41fb-8c64-8ee46273ccf4.png"
                  }
                ]
              },
              {
                "FormattedAddress": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
                "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                "description": "This is a first description test",
                "eventEndDate": "2022-01-10",
                "eventEndTime": "22:15:47",
                "eventStartDate": "2022-01-07",
                "eventStartTime": "16:15:47",
                "id": "d822b84d-a76a-446a-9daa-ab85fe537feb",
                "interestId": "f6c16a76-3896-43b1-941f-1b11bea24d81",
                "interestName": "Photographer",
                "latitude": 31.5656822,
                "longitude": 74.3141829,
                "room_id": "",
                "user": {
                  "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                  "firstName": "test",
                  "lastName": "user",
                  "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
                  "userImage": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
                },
                "userEventImages": [
                  {
                    "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                    "id": "a711bf85-963f-42ed-9728-c2047d5694fb",
                    "image": "user_event/b3e280a5-7808-41fb-8c64-8ee46273ccf4.png"
                  }
                ]
              }
            ],
            "interestId": "f6c16a76-3896-43b1-941f-1b11bea24d81",
            "interestName": "Photographer",
            "lastInterestCreatedBefore": "10 minutes",
            "trending": false
          },
          {
            "interestEvents": [
              {
                "FormattedAddress": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
                "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                "description": "This is a first description test",
                "eventEndDate": "2022-01-10",
                "eventEndTime": "22:15:47",
                "eventStartDate": "2022-01-07",
                "eventStartTime": "16:15:47",
                "id": "d822b84d-a76a-446a-9daa-ab85fe537fea",
                "interestId": "c2bedfc2-7db3-4e28-bf87-dd2de088526d",
                "interestName": "Winter Sports",
                "latitude": 31.5656822,
                "longitude": 74.3141829,
                "room_id": "",
                "user": {
                  "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                  "firstName": "test",
                  "lastName": "user",
                  "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
                  "userImage": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
                },
                "userEventImages": [
                  {
                    "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                    "id": "a711bf85-963f-42ed-9728-c2047d5694fb",
                    "image": "user_event/b3e280a5-7808-41fb-8c64-8ee46273ccf4.png"
                  }
                ]
              }
            ],
            "interestId": "f6c16a76-3896-43b1-941f-1b11bea24d81",
            "interestName": "Winter Sports",
            "lastInterestCreatedBefore": "2 minutes",
            "trending": false
          }
        ]
      },
      "title": "List Of Events",
      "type": "object"
    },
    "CreateRole": {
      "description": "Create Role",
      "example": {
        "role": "super_admin"
      },
      "properties": {
        "role": {
          "description": "Role",
          "type": "string"
        }
      },
      "title": "Create Role",
      "type": "object"
    },
    "UpdateRewardOffer": {
      "description": "Update a Reward Offer",
      "example": {
        "event_end_date": "2022-05-06",
        "event_start_date": "2022-05-02",
        "imageName": "a11519fb-69bd-4503-a1f2-029f43692044--637287148448444851--6f677db8-2a53-40fb-aeb8-efdc857eac8f",
        "is_pinned": false,
        "latitude": 40.721546,
        "link": "http://jetzy.com",
        "location": "254, Broadway, New York, NY 10007, USA",
        "longitude": -74.00145987,
        "multi_redeem_allowed": false,
        "offerDescription": "<p class=\"p1\" style=\"margin: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: normal; font-family: &quot;Helvetica Neue&quot;; color: rgb(0, 0, 0);\">\n Join Hana for a FREE live online 60-minute yin yog",
        "offerName": "June 25th - 6pm EST Yin Yoga Class with Hana Sykorova",
        "pointRequired": 1,
        "price_of_ticket": 2000
      },
      "properties": {
        "event_end_date": {
          "description": "event_end_date",
          "type": "string"
        },
        "event_start_date": {
          "description": "event_start_date",
          "type": "string"
        },
        "imageName": {
          "description": "Name of image",
          "type": "string"
        },
        "is_pinned": {
          "description": "is_pinned",
          "type": "boolean"
        },
        "latitude": {
          "description": "latitude",
          "type": "integer"
        },
        "link": {
          "description": "link",
          "type": "string"
        },
        "location": {
          "description": "location",
          "type": "string"
        },
        "longitude": {
          "description": "longitude",
          "type": "integer"
        },
        "multi_redeem_allowed": {
          "description": "multi_redeem_allowed",
          "type": "boolean"
        },
        "offerDescription": {
          "description": "Create Reward Offer Details",
          "type": "string"
        },
        "offerName": {
          "description": "offerName",
          "type": "string"
        },
        "pointRequired": {
          "description": "pointRequired",
          "type": "integer"
        },
        "price_of_ticket": {
          "description": "price_of_ticket",
          "type": "integer"
        }
      },
      "title": "Update Reward Offer",
      "type": "object"
    },
    "ListReportMessages": {
      "description": "Report Message Response",
      "example": {
        "pagination": {
          "page": 1,
          "totalPages": 1,
          "totalRows": 3
        },
        "response_data": {
          "description": "This is a first description test 123",
          "id": "a711bf85-963f-42ed-9728-c2047d5694fb",
          "itemId": "82606fa5-129c-448c-95cf-cbfc19d89790",
          "reportSourceId": "user",
          "user_id": "a711bf85-963f-42ed-9728-c2047d5694fb"
        }
      },
      "title": "Report Message",
      "type": "object"
    },
    "ListRewardOffers": {
      "description": "List Reward Offers",
      "example": {
        "responseData": {
          "data": [
            {
              "event_end_date": "2022-05-06",
              "event_start_date": "2022-05-02",
              "imagePath": "af17c444-3d56-4e66-bee3-00d498768efe--635726938977967397--37a95302-6724-49c4-ae58-772debd86376",
              "is_pinned": true,
              "is_redeemed": false,
              "latitude": 40.721546,
              "link": "http://jetzy.com",
              "location": "254, Broadway, New York, NY 10007, USA",
              "longitude": -74.00145987,
              "multi_redeem_allowed": true,
              "offerDescription": "This is new test",
              "offerName": "Luxury Test",
              "pointRequired": 150000,
              "price_of_ticket": 1000,
              "rewardOfferId": "af17c444-3d56-4e66-bee3-00d498768efe",
              "status": {
                "status": "Active",
                "status_id": "23453782-ff3f-43f9-823d-6789afcfb3a0"
              },
              "tier": {
                "description": "Brown",
                "tier_name": "Tier 1"
              }
            },
            {
              "event_end_date": "2022-05-06",
              "event_start_date": "2022-05-02",
              "imagePath": "a11519fb-69bd-4503-a1f2-029f43692044--637287148448444851--6f677db8-2a53-40fb-aeb8-efdc857eac8f",
              "is_pinned": false,
              "is_redeemed": false,
              "latitude": 40.721546,
              "link": "http://jetzy.com",
              "location": "254, Broadway, New York, NY 10007, USA",
              "longitude": -74.00145987,
              "multi_redeem_allowed": false,
              "offerDescription": "Offer Description",
              "offerName": "June 25th - 6pm EST Yin Yoga Class with Hana Sykorova",
              "pointRequired": 1,
              "price_of_ticket": 2000,
              "rewardOfferId": "b11519fb-69bd-4503-a1f2-029f43692046",
              "status": {
                "status": "Active",
                "status_id": "23453782-ff3f-43f9-823d-6789afcfb3a0"
              },
              "tier": {
                "description": "Brown",
                "tier_name": "Tier 1"
              }
            }
          ],
          "pagination": {
            "page": 1,
            "total_pages": 2,
            "total_rows": 10
          }
        }
      },
      "title": "List Reward Offers",
      "type": "object"
    },
    "ListPostType": {
      "description": "List Of PostType",
      "example": [
        {
          "id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11",
          "image_ext": "test image",
          "image_name": "Test image",
          "image_sync": "test",
          "is_shared": true,
          "latitude": 2.2222222,
          "longitude": 783.224552,
          "old_moment": "OLD test",
          "post_type_id": "b640adbb-75a8-47a7-b3b6-77ef777d2a11",
          "shoutout_type_id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11",
          "title": "ShoutOut",
          "updated_by": "test user",
          "user_id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11"
        },
        {
          "id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11",
          "image_ext": "test image",
          "image_name": "Test image",
          "image_sync": "test",
          "is_shared": true,
          "latitude": 2.2222222,
          "longitude": 783.224552,
          "old_moment": "OLD test",
          "post_type_id": "b640adbb-75a8-47a7-b3b6-77ef777d2a11",
          "shoutout_type_id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11",
          "title": "ShoutOut",
          "updated_by": "test user",
          "user_id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11"
        }
      ],
      "title": "List Of PostType",
      "type": "object"
    },
    "VerifyUserImage": {
      "description": "uploading user image for verification",
      "example": {
        "image": ""
      },
      "properties": {
        "image": {
          "description": "image",
          "type": "string"
        }
      },
      "title": "Verify User Image",
      "type": "object"
    },
    "UserFavorite": {
      "description": "User Favourite",
      "example": {
        "Address": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
        "description": "This is a first description test",
        "id": "d822b84d-a76a-446a-9daa-ab85fe537fea",
        "image": "https://tanbits-jetzy.s3.amazonaws.com/images/user-profile-images/user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg",
        "name": "hello",
        "user_favorite_type_id": "restaurant || city || activity",
        "user_id": "user"
      },
      "title": "User Favourite",
      "type": "object"
    },
    "UserEventCommentLike": {
      "description": "Like or Unlike a Comment",
      "example": {
        "message": "Comment Liked!"
      },
      "properties": {
        "message": {
          "description": "Comment Liked or Unliked",
          "type": "string"
        }
      },
      "title": "Like Or Unlike a Comment",
      "type": "object"
    },
    "SendInvite": {
      "description": "Start User Chat, chat user_id with room_id t0 get chats of a room",
      "example": {
        "email": "test1@gmail.com",
        "referral_code": "AXDFEWS"
      },
      "properties": {
        "email": {
          "description": "test1@gmail.com",
          "type": "string"
        },
        "referral_code": {
          "description": "Referral Code of Room",
          "type": "string"
        }
      },
      "title": "Start User Chat",
      "type": "object"
    },
    "AddInvitedUser": {
      "description": "Add Invited user in Room",
      "example": {
        "referral_code": "AXDFEWS",
        "user_id": "b6a25b95-f0a9-42c5-a41d-35893f099adf"
      },
      "properties": {
        "referral_code": {
          "description": "Referral Code of Room",
          "type": "string"
        },
        "user_id": {
          "description": "test1@gmail.com",
          "type": "string"
        }
      },
      "title": "Add Invited User",
      "type": "object"
    },
    "CompleteSignup": {
      "description": "Complete Invited User Signup",
      "example": {
        "first_name": "test",
        "image": "image/jpeg;base64,/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAkGBxIQDw8PDxAPDw8NDQ0NDQ0NDw8NDQ0NFREWFhURFRUYHSggGBolGxUVITEhJSkrLi4uFx8zODMtNygtLisBCgoKDg0OFw8PFysdHR0tLS0tLSstLS0rLS0tKysrLS0tLS0tLS0rLS0rLSstLSstLS0tLSstKy0rLS0tLS0tLf/AABEIAMIBAwMBIgACEQEDEQH/xAAbAAACAwEBAQAAAAAAAAAAAAACAwABBAUGB//EAD8QAAICAQIDBAUJBgUFAAAAAAABAgMRBBITITEFQVFhInGBkaEGFBUyUrHB0fAjkpOiwuEWQnKC8SQ0Q4PS/8QAGgEAAwEBAQEAAAAAAAAAAAAAAAECAwQGBf/EACURAQEAAgICAgIBBQAAAAAAAAABAhEDEhNRITFB8CIEFCNhof/aAAwDAQACEQMRAD8A+f7CbDc6AJUn2JXLcWJoFo0zqFuJSLCdpTQ7aVtGkrBNoeCYGRLgBKBpaAlEaLGbaTA5wBcQSS0TAxxKwGi2AmAsEwPQ2DBMB4KwLR7BgrAeCYDR7ATAeCsC0NltEwHgrAaPYcEwFggaPYMFYGEwGhssmBmCYFobBgkkMZTQaGysEGbSC0e3sdhTgaraWhTgc0y277iyzqM1lJ0WhU4mkyZ5YuXKABvsqM06jWVjliRJAMc4guJTKwvJEE4lYGlTQDiMK2jIlxKcR20FoaaRgmBrrK2AkvBNobRMD0Wy8FYGYJgWj2XgmA8EwGhstoHA3BTQaPZeCYDwVgR7BgmA8EwB7BgvAWC8ANl4JgPBWA0NhwQZggaLb6jdpk10OddpjtytRntimfBw5LHoMsZXCs04iVZ2bKhE6jrx5WGXG5MqxNlZ1p0GedJvjmxywcmdQmUDqTpM86jaZOfLBz3EFo1TrEygayscoVgrAe0mBoBgpxGoLahjTPgjQ6VYLgNNhDiTYOcQWgRYS4gtD2inAZE4JgZtKwPSdl4JgZgpxFo9lNFYGNFYFo9hwVgPBMBo9gwWkFgJIei2XtJtHbQXENDsVggzBA0NvqNulYiUGjqsVOK7zzMzr01xctsBm62hGadRtjlGdjPKIidRpnAVKLRvjWdjHOvAmcDbIBxR0Y5MssdubOsRKk6sqUxM6DbHNhlg5U6RTgdV0sVPTmkzY3BzdpWDZOkU4GkrO4kJjIrJHApLA0fQuGU6ibhkZAPgnhlOs1cinAYuLI6xcqzZKIuSHGdjG4lGmURcqymdhWCsDHErAaLZeCYDwTAj2HBaQWC0hltEiOIe0JRAQjaQfsIBvrtmnwZ7KzrzgZ7KjyW3rHJnWZ50nTtoM1lbNMckWOdKsVKJumjPNm2OTOxjsrM8qjexUoG+GbKxgcQTZOoTKo6Mc5WdxJKcEMcAcGkrO7KlShE9Ma2U2XMqzslc6enEuo6uAJVJmkzZ3By3UC4HRnQJlUXMmVwZEEpjnWLcCkasTJHEFxImNNvsEqwNo/JHEaazuAuVRpcSsD2mxjcSsGzhgypGjqyloc6QHWwIcBiQNaGqAVpj9FkDcCC2b7nZSjNZpzoSgLcDyenpZXLnSzPZT5HYlWKlSJW3Cs05kt0p6GdBms0pUysKzbzlmnETqZ6GzSGWzSG2PKi4OFKLAZ1rNN5GaenN8eWMrhXOkgHE3SoEzqOjHkjK4su0GUB7gVtNZkzuLLKIJrcBcqi5kzsZmwGzRKsW6zSVnYDCYudC7hjgVguVNZpVMXKBsKaLlZXFi2kNbrQDqHtFxZskGypBdRW0gCSBaLTAot1lOsLeErAP4IdY6oLKYOBbE+BOohW5kBW4+8SiKcTVKAuUDyz0UZmgJRNDiLlEWz0zyiKlA1OIDiJWmOcBE6zfKAmVYtnpz7KTNZpl4HUlAVKA5loXHbj2aRGeelO1KsTKs0x5bEXjcSWm8hMtMdyVYqVSNseesrxOI6AeEdeVAuVJtOdleJynWLnWdZ0ip0GuPNGd4q5MqRUqTqzoFSpN8eVleNy3UC4HTlULdJpORleNznErBulQLdJpM4zuFZMFYNTpAdRXZNxrLKvIuVRt4ZNhXZFwc91guB0XWgHUPujx1hwEmaJVAOsOw62FED4ZA2NV9/YuRxYfKzRy6aqn2z2/eXH5SaSUtq1Wn3Y3bXbBPb482eVtvp6eYurIXIxrtWh9L6H6ra3+JnfbmnzjjQ8Orx7+hFtaTF0GLkZK+1KptqFtcmu5SWfZ4hytJuelzA1sXIS71nGVldVlZQuVxNzVOM2QqQqV4mWoF3V4zpCpIzW6xR6tLnjm0ufgYKu11PUXUJL9hXTOcuvpWb8R8uUU/aVMrSuMjpyiKkgHeBK4cyqbhBtC5IF2gStNJlWdwgmgZIXK0XK01mVZXCDlEVKJHcLlea45VlcYqUQHEqVwLuNsc6m8cRwAdZHcC7jWclZ3jgXWLlBBSuPOdo9q3U18Kv6tt+rc24cSTTseIpvosDvNYm8WLu4XPyeH5Pr+ILieU0HbHzetRknZvlxNykn6ONu3n35R1tB27C1TbTrUNmXNrGZJvCx/pZc5mfixrq7AHAyQ7Zpf/lrWM/51n1mvjIuc1HhgXAFwCd6BdyK8tTf6eA2EC4qIHlpf20ef7VptponNPphNqSbSbxlPL58zDoJWPURUnunFSU8v0XiHTqjfquy5beau5tLLnOSflzeAOyezIu2W/iOLTe3dJPOe/ByfOtun8t3zSb54gm+ixW0vfkUtPYvsY6Z/Zp5950Zdi1Y5VX/xHGK/eYH0JCWcOax04k4yX3k94vrWTg2dyT/9j/8AoNOxfaX+m7H9Y+HYK7nW/avzGP5Od+2t+ptP7g74ex1y9McbLc7sybznLty8+vd1HQ12oTbVtqfe/nHN+vvDl8n0v8i8eUs/gB9BR7+X+1P8h/wpfzhv0hqWlm65tc8cZv47RGm+UGplbZXxbGqnze5vrGOF9Tx3DfoWv7aXrriZ9L2VFytzOOFNqPoxWV1z8Q68fr/g78n7XK7e7Q1EmtNK2VlbkrFvcnJbpOKUpYzycse4dpvlFqtLF1zlKyUZ7pN4m+Hsjz3NZeOfXwE9p0bb4x9GUVwue2PXfnux4Ce139VbViVuz0Vt9Fyi3nx6YJvHh6TM8/b1D+Utqw3ZHn0zWky38pbftR/h/wBxHafZ2FQ4Rb/6mlTzJcq3lNrwfM6X0TDu3L/cvyFrh9NO3L7Zf8SWeMf3H+YH+IbftJ+Tr6Gxdkx+1P8Ae5Y9w6vQRj9r95j/AMM/A3ye3K1Pygsccp84pvEIelP35Ey+UtjlXDlHc5xcnH6zSUk8YfXLXd0O66orovxPJdsXZ7Q00IxeKpwzLnjdLm168KLFvD8Yle0+66E/lFbxJVRSsmoRkoqDy5PCx0WOsfeVqe1ZzUZelDEZNuEmk8NZ9eMNd4q2vh67jcnGdahh4yppOax/CfvNXZFO6iCsit8dymmsPMnnmvNNP2jmvvQ+frbn6jtS6nZGVjfElti5JTaS6vmvFx6j9b2tbXFuTkuj9FVvbHnlvx6dAe3aM2adR6RsjZLk2n+0hFL+Z+5nQ1ujVkGsJvGY5+1h4+8e97L59sf03PdFYXpS9HEfSa8OvrEWdr3yUmoutxcorMXKMsLOWlnw8ToWaNb4SSWIv0ljuSeMe1iZaJRjZjLy5zWe5tDL5K03buVHi1WVuUtr5Nr4peDFz7XhFzi5Nxs3qElXKOG9zaln1rp5mjRUzUIb3iUZOT29GueF8TkdvUuW2Skk422RWXjEnzTWOfcuZGeMsmzmVn05dzThWk+cVKM14S3Npe5oVKLjlPl3Pnyb6d3LxA0cZqUpNZTbUs45vPX7zqWS4kpS2LlGCku7KilnH4jkZVy9rfdy9h1dTrbJqDVjjKWd0YScIxS+r0fLPPl5CtkefoYz17uXsNFvZUUk1F81nk2adbv4qZfj6SvtO6EYrKn0w5KTck8t5k35pez37a+2ISlteY8ouLkmt2eq9hzl2SmsrcvLkKn2X6W3dLkk1yXLmFx5Papn/p2vpOv7a5NrpPx9RDiy7Gf2v5f7lB15P3R+SenuNblpLK68koy/qwL7LoeZOK8sval19o6yxR6ygvL0YjtJqIpcmvflHNuzHUdXx22coWLujnyxt+7JIzt70l6pbvyL+cp9/uyLepXivesmer6Xcp7Duu553euMl9zZcHPvlZ552r+p/cU9QBLUl9b6R3h73ePvw/wLxLxj8UY3qgZavzKnHU3Nvk/Ha/YZ41pZ5LnKT6J9fYZfnT8fwQD1Pn+Zc4qi5xm13ZrnOLUsc459hxtfT6dUOf8A3nBm33xlteV7Mo9F84/TOZ2hVvnS0vq3RtlLPL0V3/A16ZMrY6PaVj36aMF9bUJyfN4hGEm/UdPj4ORO5Nxbw3Ftxfg2sFvVi8KvLHVeoAd5ynqvUB86KnAm80dWVp5u/tDZqfm7Vjdl9dqnu5bXFfjFr1I3/Oji65OWsoly9GEm/ZnHxaC8Wk+XZ9l8rNXcsvbRUpxSbTdiXLp1XOXLvOt2bqeJF3fV4qilHvUY5XXv5tnMntg7bVHdKde2SXWXL7+nuGaGThVCGU9kVHKXIqcPz8p80V27qHG3T7c/tJRg9rxzVkGn7t37zOyrzz+ui7J0yTwqpuTXjy/t8TV84HOH5pXndR3ICVqOY9QVxy/FE3nb1Zhdc+tL8Dg9u2bVHkt0rLHnH+XC9H34NrvM2ogpyi2+UNzx45FnxbgnO5fZMpO2VcksZcm8Llh4x8UdvT0pWTfJQcYxXLm2u8zU0xhKcl1m8t9B/FDHi19pvM0OpfrAal+uZlVwLuL6jyte4XKSzn2GZ3FcUOo8rXvIZOKULqPK7iiscvgkl8EMjPHevi/xObxs/wDH4lcX9Zyzn6Ovu6M558H68fimC7Md79W5493T4HNd2e9sp3NeRU403N0pWvxwvJYfvAVmO9v1vLOZK9+OfewXqPN/7Ul+ZUwTeR05XfpvK+8DiPv/AJUcx6jw5fFgu4qYIvI6bt/XIB2vxOa7fP4lcZ+JekXN0He14g/OGc+Vj8fuJxX5fEaLW53sF3sxStZTu9RRWtjuZOL4mF3v/griglud/gCpmTjYBd4bJu4oErjFxiuIGya3eC7jLxCt4di1Wp3FO0zbyOYdhqtHFL4pm3E3i7DrWjjE4pl4hXEDuOrXxinaZOITeLufVq4hOIZdwWRdh1P3kEZIHYdXT4q75exFPUruXveTncReb+CL43kvvM46ttzvb/XIB2eL9xkdrfeVuHsml2guwz70VxB7I9zKcxG8m8OxaO3E3COIDvDsNNG8m8z7ytwuxdWh2gOYpMvIdx1MUiOYtzJkO46j3FZFuRW4XcdDcl7hKmC5i7n0O3E3iN5Nwuw6nbybxG4vIdj6m7ybhTZW4XYdTdxNwrJeQ7H1MyTIvJW4Ow6nZL3CNxMi7DqfuIJyUHYdTSkQhQOQLIQYAwokIIBZTKIAQpkIILRCEEYmAUQCWi5EIJQSEIAUgWQghFEIQKayFkEFMpEIAQhCAEZTLIAUy0QgARCEAP/Z",
        "last_name": "user"
      },
      "properties": {
        "first_name": {
          "description": "first name",
          "type": "string"
        },
        "image": {
          "description": "base64 image ",
          "type": "string"
        },
        "last_name": {
          "description": "last name",
          "type": "string"
        }
      },
      "title": "Complete Signup",
      "type": "object"
    },
    "CreateFriend": {
      "description": "Create Friend",
      "example": {
        "friend_id": "3a3a53d-1d55-40c2-b955-57f8d7be0232"
      },
      "properties": {
        "friend_id": {
          "description": "Friend ID",
          "type": "string"
        }
      },
      "title": "Create Friend",
      "type": "object"
    },
    "UserImage": {
      "description": "User Profile image uploading",
      "example": {
        "image": ""
      },
      "properties": {
        "image": {
          "description": "image",
          "type": "string"
        }
      },
      "title": "Add User Profile Image",
      "type": "object"
    },
    "DeleteUserFromChat": {
      "description": "Remove a User from a chat by their ID and Room ID",
      "example": {
        "responseData": {
          "first_name": "first name",
          "image_name": "User Image",
          "last_name": "last name",
          "room_id": "215f1fb5-69ee-4f53-a81f-c277c3f048fa",
          "user_id": "215f1fb5-69ee-4f53-a81f-c277c3f048fa"
        }
      },
      "title": "Delete User from a chat",
      "type": "object"
    },
    "CreateResource": {
      "description": "Create Resource",
      "example": {
        "res": "comments"
      },
      "properties": {
        "res": {
          "description": "Resource",
          "type": "string"
        }
      },
      "title": "Create Resource",
      "type": "object"
    },
    "DeleteRoomMessage": {
      "description": "Delete Chat Message",
      "example": {
        "room_message_ids": [
          "2cfd8787-315b-4f3b-8c50-83f2a14d3f3c",
          "2cfd8787-315b-4f1b-8c50-83f2a14d3f1a"
        ]
      },
      "properties": {
        "room_message_list": {
          "description": "room_message_ids",
          "type": "array"
        }
      },
      "title": "Delete Chat Message",
      "type": "object"
    },
    "AddJetPoints": {
      "description": "Add Jetpoints",
      "example": {
        "points": 5,
        "remarks": ""
      },
      "properties": {
        "points": {
          "description": "Points to add",
          "type": "integer"
        },
        "remarks": {
          "description": "Add remarks/comments (optional)",
          "type": "string"
        }
      },
      "title": "Add Jetpoints",
      "type": "object"
    },
    "CreateReportMessage": {
      "description": "Update Report Message",
      "example": {
        "description": "This is a first description test",
        "item_id": "82606fa5-129c-448c-95cf-cbfc19d89791",
        "report_source_id": "user OR user_event OR user_shoutout"
      },
      "properties": {
        "description": {
          "description": "Report Message",
          "type": "string"
        },
        "item_id": {
          "description": "Item ID",
          "type": "string"
        },
        "report_source_id": {
          "description": "Report Source ID",
          "type": "string"
        }
      },
      "title": "Update Report Message",
      "type": "object"
    },
    "ListPost": {
      "description": "List Of Posts",
      "example": {
        "responseData": {
          "data": [
            {
              "comments": {
                "description": "Excellent",
                "id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                "inserted_at": "",
                "replies": [
                  {
                    "comment_id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                    "description": "Thanks",
                    "id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                    "inserted_at": "",
                    "updated_at": "",
                    "user": {
                      "first_name": "First Name",
                      "last_name": "Last Name",
                      "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                      "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
                    }
                  }
                ],
                "replies_count": 3,
                "shoutout_id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                "updated_at": "",
                "user": {
                  "first_name": "First Name",
                  "last_name": "Last Name",
                  "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                  "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
                }
              },
              "comments_count": 3,
              "created_date": "",
              "description": "Here is a description about the post",
              "id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
              "is_old_moment": false,
              "is_shared": false,
              "likes_count": 3,
              "self_like": false,
              "shoutout_guid": "",
              "shoutout_images": [
                "shoutout/a31f1576-a38e-473a-8ca6-64ce28368caf.png",
                "shoutout/63ca14a5-e41a-43a6-8f3c-c09b37e67db7.png"
              ],
              "shoutout_latitude": 0.0,
              "shoutout_longitude": 0.0,
              "title": "First Post",
              "updated_by": "",
              "url": "Post Link",
              "user": {
                "base_url": "https://tanbits-jetzy.s3.amazonaws.com/",
                "first_name": "First Name",
                "last_name": "Last Name",
                "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
              },
              "user_small_image_path": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
            }
          ],
          "pagination": {
            "page": 1,
            "total_pages": 2,
            "total_rows": 10
          }
        }
      },
      "title": "List Of Posts",
      "type": "object"
    },
    "ListPermission": {
      "description": "List Of Permissions",
      "example": [
        {
          "id": "cbe2d554-b72b-4a46-82ac-61fd0121d348",
          "permission": 4,
          "resource_id": "users",
          "role_id": "super_admin"
        },
        {
          "id": "bbe2d554-b72b-4a46-82ac-61fd0121d447",
          "permission": 4,
          "resource_id": "commnets",
          "role_id": "super_admin"
        }
      ],
      "title": "List Of Permissions",
      "type": "object"
    },
    "UpdateInterestTopic": {
      "description": "Update Interest Topic",
      "example": {
        "description": "Interest Topic Description",
        "image_name": "",
        "topic_name": "Interest Topic"
      },
      "properties": {
        "description": {
          "description": "Description",
          "type": "string"
        },
        "image_name": {
          "description": "Base64 value",
          "type": "string"
        },
        "topic_name": {
          "description": "Title",
          "type": "string"
        }
      },
      "title": "Update Interest Topic",
      "type": "object"
    },
    "ChatRoomInListing": {
      "description": "Chat Room in Listing",
      "example": {
        "ResponseData": {
          "lastMessage": {
            "callbackVerification": "here we go",
            "message": "",
            "messageId": "546cc1e4-6970-4182-9094-ed9f0921ecd8",
            "messageImages": [],
            "messageTime": "2021-12-24T10:09:58Z",
            "user": {
              "firstName": "",
              "lastName": "",
              "userId": "a711bf85-963f-42ed-9728-c2047d5694fb"
            }
          },
          "roomId": "2f0226ca-ea83-492f-b209-08d4f9c45d6b",
          "roomType": "event_chat",
          "roomUsers": [
            {
              "firstName": "",
              "lastName": "",
              "userId": "d68bbf19-98d0-4b4b-84b6-3cf94e89113c"
            },
            {
              "firstName": "",
              "lastName": "",
              "userId": "fa11b37c-46d7-4749-bb88-46b26820ea69",
              "userImage": "https://tanbits-jetzy.s3.amazonaws.com/images/user-profile-images/user-4ade59c9-e6a6-46cf-95e9-1aee9a94a8fa.jpg"
            }
          ]
        }
      },
      "title": "Chat Room in Listing",
      "type": "object"
    },
    "ListUserInterest": {
      "description": "List Of User Interest IDs",
      "example": {
        "responseData": [
          "2cfd8787-315b-4f3b-8c50-83f2a14d3f3c",
          "41fe4093-5be0-434f-9db6-82ceb9f91948"
        ]
      },
      "title": "List Of User Interest IDs",
      "type": "object"
    },
    "FrequentlyAskedQuestions": {
      "description": "Frequently Asked Questions",
      "example": [
        {
          "answer": "we connect people",
          "category": "about us",
          "id": "3df94ca6-efed-4212-a45b-0c55fdcdfb0f",
          "image_name": "",
          "question": "How are we?"
        }
      ],
      "title": "Frequently Asked Questions",
      "type": "object"
    },
    "RoomMessage": {
      "description": "RoomMessage Model",
      "example": {
        "description": "Outstanding!! Keep It Up.",
        "id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
        "replies": [
          {
            "comment_id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
            "description": "Thanks",
            "id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
            "inserted_at": "",
            "updated_at": "",
            "user": {
              "first_name": "First Name",
              "last_name": "Last Name",
              "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
              "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
            }
          }
        ],
        "replies_count": 2,
        "user": {
          "first_name": "First name",
          "last_name": "Last name",
          "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
          "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
        }
      },
      "properties": {
        "description": {
          "description": "RoomMessage",
          "type": "string"
        },
        "id": {
          "description": "id",
          "type": "string"
        },
        "parent_id": {
          "description": "Parent ID",
          "type": "string"
        },
        "updated_by": {
          "description": "Updated By",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "title": "RoomMessage Model",
      "type": "object"
    },
    "Interest": {
      "description": "Interest",
      "example": {
        "responseData": {
          "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
          "event_members_count": "9",
          "events": [
            {
              "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
              "description": "Event testing 2",
              "eventEndDate": "2018-08-02",
              "eventEndTime": "13:00:00",
              "eventStartDate": "2018-08-02",
              "eventStartTime": "08:00:00",
              "formatedAddress": "ajqjjajwj",
              "id": "48685b68-63fd-11ec-90d6-0242ac120003",
              "image": "interest-618c4478-631f-42e7-b2c6-4f258d0b080b.jpg",
              "interestId": "7aad45a5-f697-4dae-bf0a-a88dd9e0adec",
              "latitude": 881.0,
              "longitude": 133.0
            }
          ],
          "id": "7aad45a5-f697-4dae-bf0a-a88dd9e0adec",
          "imageName": "Outdoorsy.png",
          "interestDescription": "Outdoorsy",
          "interestName": "Outdoorsy",
          "interestTopics": [
            {
              "description": "Interest Topic Description",
              "id": "babd0904-b2f6-4f97-a780-0152c76d75b7",
              "insertedAt": "2021-12-27T10:30:42Z",
              "interestId": "de9dca9a-66f0-4975-aa83-0c4d3ecba074",
              "roomId": "ec83a8ef-6654-4fa6-94a4-6d91a4c5ff58",
              "topicName": "Street Food",
              "updatedAt": "2021-12-27T10:30:42Z"
            },
            {
              "description": "Interest Topic Description",
              "id": "ca7b99f2-4667-48a6-8f51-2e099f5a0ab6",
              "insertedAt": "2021-12-27T10:40:20Z",
              "interestId": "de9dca9a-66f0-4975-aa83-0c4d3ecba074",
              "roomId": "ce86fe8e-1cba-4cd9-889d-cc267fc58912",
              "topicName": "Bike Travellers",
              "updatedAt": "2021-12-27T10:41:03Z"
            }
          ],
          "last_member_joined_at": "2 minutes ago",
          "last_message_at": "4 minutes ago",
          "smallImageName": "interest-618c4478-631f-42e7-b2c6-4f258d0b080b.jpg",
          "status": 0,
          "users": [
            {
              "email": "superadmin@jetzy.com",
              "firstName": "Super",
              "lastName": "Admin",
              "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
              "userImage": ""
            }
          ]
        }
      },
      "title": "Interest",
      "type": "object"
    },
    "UpdateComment": {
      "description": "Update RoomMessage",
      "example": {
        "message": "Perfect!!."
      },
      "properties": {
        "message": {
          "description": "RoomMessage",
          "type": "string"
        },
        "updated_by": {
          "description": "Updated By",
          "type": "string"
        }
      },
      "title": "Update RoomMessage",
      "type": "object"
    },
    "CreateUserCity": {
      "description": "Save User City",
      "example": {
        "city": "Madrid",
        "country": "Spain",
        "displayFromDate": "2019-01-01",
        "displayToDate": "2019-01-01"
      },
      "properties": {
        "city": {
          "description": "city",
          "type": "string"
        },
        "country": {
          "description": "country",
          "type": "string"
        },
        "displayFromDate": {
          "description": "displayFromDate",
          "type": "date"
        },
        "displayToDate": {
          "description": "displayToDate",
          "type": "date"
        }
      },
      "title": "Save User City",
      "type": "object"
    },
    "UpdateSetting": {
      "description": "Update User Settings",
      "example": {
        "is_enable_chat": true,
        "is_follow_public": true,
        "is_groupchat_enable": true,
        "is_info": true,
        "is_moments_enable": true,
        "is_profile_image_sync": true,
        "is_push_notification": true,
        "is_show_followings": true,
        "is_show_on_profile": true
      },
      "properties": {
        "is_enable_chat": {
          "description": "Is Enable Chat",
          "type": "boolean"
        },
        "is_follow_public": {
          "description": "Is Follow Public",
          "type": "boolean"
        },
        "is_groupchat_enable": {
          "description": "Is Group chat enable",
          "type": "boolean"
        },
        "is_info": {
          "description": "Is info",
          "type": "boolean"
        },
        "is_moments_enable": {
          "description": "Is moments enable",
          "type": "boolean"
        },
        "is_profile_image_sync": {
          "description": "Is Profile Image Sync",
          "type": "boolean"
        },
        "is_push_notification": {
          "description": "Is Push Notification",
          "type": "boolean"
        },
        "is_show_followings": {
          "description": "Is show Followings",
          "type": "boolean"
        },
        "is_show_on_profile": {
          "description": "Is Show On Profile",
          "type": "boolean"
        },
        "un_subscribe": {
          "description": "Un Subscribe",
          "type": "boolean"
        },
        "user_invite_type": {
          "description": "User Invite Type",
          "type": "integer"
        }
      },
      "title": "Update User Settings",
      "type": "object"
    },
    "UpdatePostType": {
      "description": "Update Post Type",
      "example": {
        "image_ext": "test image",
        "image_name": "Test image",
        "image_sync": "test",
        "latitude": 2.2222222,
        "longitude": 783.224552,
        "old_moment": "OLD test",
        "title": "Post Type",
        "user_id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11"
      },
      "properties": {
        "id": {
          "description": "Title",
          "type": "string"
        },
        "image_ext": {
          "description": "Image Text",
          "type": "string"
        },
        "image_name": {
          "description": "Image Name",
          "type": "string"
        },
        "image_sync": {
          "description": "Image Sync",
          "type": "string"
        },
        "is_shared": {
          "description": "Is Shard",
          "type": "boolean"
        },
        "latitude": {
          "description": "Latitude",
          "type": "float"
        },
        "longitude": {
          "description": "Longitude",
          "type": "float"
        },
        "old_moment": {
          "description": "Old Moment",
          "type": "string"
        },
        "post_type_id": {
          "description": "Post Type ID",
          "type": "string"
        },
        "shoutout_type_id": {
          "description": "ShoutOut Type ID",
          "type": "string"
        },
        "title": {
          "description": "Title",
          "type": "string"
        },
        "updated_by": {
          "description": "Updated By",
          "type": "string"
        },
        "user_id": {
          "description": "User ID",
          "type": "string"
        }
      },
      "title": "Update Post Type",
      "type": "object"
    },
    "SignIn": {
      "description": "User Sign In Schema",
      "example": {
        "installs": {
          "device_token": "dsadsadsadsa",
          "fcm_token": "dfsfads543fdsfdasd"
        },
        "login": "superadmin@jetzy.com",
        "password": "12345"
      },
      "properties": {
        "login": {
          "description": "email",
          "type": "string"
        },
        "password": {
          "description": "password",
          "type": "string"
        }
      },
      "required": [
        "password",
        "login"
      ],
      "title": "Sign in User Schema",
      "type": "object"
    },
    "CreateUser": {
      "description": "User SignUp",
      "example": {
        "current_city": "USA",
        "current_country": "",
        "first_name": "Super",
        "deleted_at": "2021-09-06T00:00:00",
        "panic_message": "",
        "current_jwt": "",
        "image_name": "",
        "last_name": "Admin",
        "school": "String.t | nil",
        "quick_blox_password": "",
        "quick_blox_id": "",
        "dob_full": "String.t | nil",
        "friend_code": "",
        "login_type": "",
        "approval_status": "",
        "is_referral": "",
        "password": "123",
        "home_town_city": "Nevada",
        "longitude": "92.98385212321",
        "created_date": "2021-09-06",
        "last_modified_date": "2021-09-06",
        "email": "superadmin@jetzy.com",
        "home_town_country": "",
        "latitude": "",
        "gender": "",
        "social_id": "",
        "referral_code": "",
        "is_email_verified": true,
        "is_deactivated": "",
        "user_about": "",
        "is_active": true,
        "dob": "",
        "is_deleted": "false"
      },
      "properties": {
        "approval_status": {
          "description": "Approval Status",
          "type": "string"
        },
        "created_date": {
          "description": "Created Date",
          "type": "date"
        },
        "current_city": {
          "description": "Current City",
          "type": "string"
        },
        "current_country": {
          "description": "Current Country",
          "type": "string"
        },
        "current_jwt": {
          "description": "Current JWT",
          "type": "string"
        },
        "dob": {
          "description": "Date Of Birth",
          "type": "date"
        },
        "dob_full": {
          "description": "Full Date OF Birth",
          "type": "string"
        },
        "email": {
          "description": "Email",
          "type": "string"
        },
        "first_name": {
          "description": "First Name",
          "type": "string"
        },
        "friend_code": {
          "description": "Friend Code",
          "type": "string"
        },
        "gender": {
          "description": "Gender",
          "type": "string"
        },
        "home_town_city": {
          "description": "Home Town City",
          "type": "string"
        },
        "home_town_country": {
          "description": "Home Town Country",
          "type": "string"
        },
        "image_name": {
          "description": "Image Name",
          "type": "string"
        },
        "is_active": {
          "description": "Is Account Active or not",
          "type": "boolean"
        },
        "is_deactivated": {
          "description": "Is Deactivated",
          "type": "boolean"
        },
        "is_email_verified": {
          "description": "Email Verified",
          "type": "boolean"
        },
        "is_referral": {
          "description": "Is Referred",
          "type": "boolean"
        },
        "last_name": {
          "description": "Last Name",
          "type": "string"
        },
        "latitude": {
          "description": "Lat",
          "type": "float"
        },
        "login_type": {
          "description": "Login Type",
          "type": "string"
        },
        "longitude": {
          "description": "Long",
          "type": "float"
        },
        "panic_message": {
          "description": "Panic Message",
          "type": "string"
        },
        "password": {
          "description": "Password",
          "type": "string"
        },
        "quick_blox_id": {
          "description": "Quick Blox ID",
          "type": "string"
        },
        "quick_blox_password": {
          "description": "Quick Blox Password",
          "type": "string"
        },
        "referral_code": {
          "description": "Referral Code",
          "type": "string"
        },
        "school": {
          "description": "School",
          "type": "string"
        },
        "social_id": {
          "description": "Social ID",
          "type": "string"
        },
        "user_about": {
          "description": "User About",
          "type": "string"
        }
      },
      "title": "User SignUp",
      "type": "object"
    },
    "ReportMessage": {
      "description": "Report Message Response",
      "example": {
        "response_data": {
          "description": "This is a first description test 123",
          "id": "a711bf85-963f-42ed-9728-c2047d5694fb",
          "itemId": "82606fa5-129c-448c-95cf-cbfc19d89790",
          "reportSourceId": "user",
          "user_id": "a711bf85-963f-42ed-9728-c2047d5694fb"
        }
      },
      "title": "Report Message",
      "type": "object"
    },
    "UpdateUserPassword": {
      "description": "Update User Password",
      "example": {
        "new_password": "12345",
        "old_password": "123"
      },
      "properties": {
        "new_password": {
          "description": "New Password",
          "type": "string"
        },
        "old_password": {
          "description": "Old Password",
          "type": "string"
        }
      },
      "title": "Update User Password",
      "type": "object"
    },
    "AddRoomUser": {
      "description": "Add a User to a Room by their user IDs",
      "example": {
        "room_id": "215f1fb5-69ee-4f53-a81f-c277c3f048fa",
        "user_id": "215f1fb5-69ee-4f53-a81f-c277c3f048fa"
      },
      "properties": {
        "room_id": {
          "description": "Room ID",
          "type": "string"
        },
        "user_id": {
          "description": "User ID",
          "type": "string"
        }
      },
      "title": "Add User to a room",
      "type": "object"
    },
    "CreateInterest": {
      "description": "Create Interest",
      "example": {
        "background_colour": "#f79432",
        "description": "Test Interest",
        "image_name": "",
        "interest_name": "Interest",
        "is_group_private": true,
        "is_private": true,
        "status": true
      },
      "properties": {
        "background_colour": {
          "description": "#f79432",
          "type": "string"
        },
        "description": {
          "description": "Test Interest",
          "type": "string"
        },
        "image_name": {
          "description": "",
          "type": "string"
        },
        "interest_name": {
          "description": "Interest",
          "type": "string"
        },
        "is_group_private": {
          "description": true,
          "type": "boolean"
        },
        "is_private": {
          "description": true,
          "type": "boolean"
        },
        "status": {
          "description": true,
          "type": "boolean"
        }
      },
      "title": "Create Interest",
      "type": "object"
    },
    "UpdateUserProfile": {
      "description": "User Update",
      "example": {
        "current_city": "Phila",
        "current_country": "USA",
        "dob_full": "String.t | nil",
        "employer": "Product Manager",
        "first_name": "Super",
        "gender": "male",
        "home_town_city": "Nevada",
        "home_town_country": "Newzeland",
        "last_name": "Admin",
        "latitude": "33.5",
        "login_type": "",
        "longitude": "92.98385212321",
        "panic_message": "Cause. A system panics and crashes when a program exercises an operating system bug.",
        "school": "Brown University",
        "user_about": "Interested in food and pop culture. Love hanging out in bars and cafes!"
      },
      "properties": {
        "current_city": {
          "description": "Current City",
          "type": "string"
        },
        "current_country": {
          "description": "Current Country",
          "type": "string"
        },
        "dob": {
          "description": "Date Of Birth",
          "type": "date"
        },
        "dob_full": {
          "description": "Full Date OF Birth",
          "type": "string"
        },
        "employer": {
          "description": "User Employment",
          "type": "string"
        },
        "first_name": {
          "description": "First Name",
          "type": "string"
        },
        "gender": {
          "description": "Gender",
          "type": "string"
        },
        "home_town_city": {
          "description": "Home Town City",
          "type": "string"
        },
        "home_town_country": {
          "description": "Home Town Country",
          "type": "string"
        },
        "image_name": {
          "description": "Image Name",
          "type": "string"
        },
        "is_email_verified": {
          "description": "Email Verified",
          "type": "boolean"
        },
        "last_name": {
          "description": "Last Name",
          "type": "string"
        },
        "latitude": {
          "description": "Lat",
          "type": "float"
        },
        "longitude": {
          "description": "Long",
          "type": "float"
        },
        "panic_message": {
          "description": "Panic Message",
          "type": "string"
        },
        "school": {
          "description": "School",
          "type": "string"
        },
        "user_about": {
          "description": "User About",
          "type": "string"
        }
      },
      "title": "User Update",
      "type": "object"
    },
    "ListInterestTopic": {
      "description": "List Of Interest Topic",
      "example": {
        "ResponseData": {
          "interestTopics": [
            {
              "description": "Interest Topic Description",
              "id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11",
              "interest_id": "b640adbb-75a8-47a7-b3b6-77ef777d2a11",
              "room_id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11",
              "topic_name": "Interest Topic"
            },
            {
              "description": "Interest Topic Description",
              "id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11",
              "interest_id": "b640adbb-75a8-47a7-b3b6-77ef777d2a11",
              "room_id": "b640adbb-75a8-47a7-b3b6-77ef718d2a11",
              "topic_name": "Interest Topic"
            }
          ]
        }
      },
      "title": "List Of Interest Topic",
      "type": "object"
    },
    "NearbyUser": {
      "description": "Get List OF Nearby Users",
      "example": {
        "advancedSearch": false,
        "ageFrom": 18,
        "ageTo": 80,
        "anotherUserId": "",
        "city": "",
        "firstName": "",
        "gender": "",
        "interestId": "0",
        "interests": "",
        "isCurrentLocation": true,
        "isFriend": false,
        "isLocal": false,
        "isLocation": true,
        "isMyShoutout": false,
        "isPrivate": false,
        "isTraveler": false,
        "lastName": "",
        "order": 0,
        "page": 1,
        "postTypeId": 0,
        "privateInterests": "",
        "shoutoutType": 0,
        "userLatitude": "37.332331",
        "userLongitude": "-122.031219",
        "userName": "",
        "viewBy": 1
      },
      "title": "Get List OF Nearby Users",
      "type": "object"
    },
    "UserCountry": {
      "description": "User Country",
      "example": {
        "city": "Madrid",
        "country": "Spain",
        "displayFromDate": "2019-01-01",
        "displayToDate": "2019-01-01"
      },
      "title": "User Country",
      "type": "object"
    },
    "InviteCode": {
      "description": "User Invite Code",
      "example": {
        "referral_code": "c8d9ht"
      },
      "properties": {
        "referral_code": {
          "description": "Referral Code",
          "type": "string"
        }
      },
      "title": "Invite Code",
      "type": "object"
    },
    "DeleteRoomUser": {
      "description": "Remove a User from a Room by their user IDs",
      "example": {
        "room_id": "215f1fb5-69ee-4f53-a81f-c277c3f048fa",
        "user_id": "215f1fb5-69ee-4f53-a81f-c277c3f048fa"
      },
      "properties": {
        "room_id": {
          "description": "Room ID",
          "type": "string"
        },
        "user_id": {
          "description": "User ID",
          "type": "string"
        }
      },
      "title": "Delete User from a room",
      "type": "object"
    },
    "UserRole": {
      "description": "UserRole",
      "example": {
        "id": "cbe2d554-b72b-4a46-82ac-61fd0121d348",
        "role": {
          "id": "super_admin",
          "name": "Super Admin"
        },
        "role_id": "super_admin",
        "user": {
          "id": "abc2d554-b72b-4a46-82ac-61fd012112345"
        },
        "user_id": "abc2d554-b72b-4a46-82ac-61fd012112345"
      },
      "title": "UserRole",
      "type": "object"
    },
    "AddInterestUsers": {
      "description": "Add single/multiple users of an interest",
      "example": {
        "interest_id": "b2b86ce2-6823-44ef-ac86-c633533bdddc",
        "user_ids": [
          "a711bf85-963f-42ed-9728-c2047d5694fb",
          "1b32a4e2-67bc-11ec-90d6-0242ac120003",
          "33f65d6a-67bd-11ec-90d6-0242ac120003"
        ]
      },
      "properties": {
        "interest_id": {
          "description": "Interest",
          "type": "string"
        },
        "user_ids": {
          "description": "Lists of Users Contacts",
          "type": "array"
        }
      },
      "title": "Add Interest Users",
      "type": "object"
    },
    "AddInterestUsersResponse": {
      "description": "Add single/multiple users of an interest",
      "example": {
        "ResponseData": {
          "message": "Users Added Sucessfully.",
          "success": true
        }
      },
      "title": "Add Interest Users",
      "type": "object"
    },
    "UpdateInterest": {
      "description": "Update Interest",
      "example": {
        "background_colour": "#f79432",
        "baseUrl": "",
        "description": "Test Interest",
        "image_name": "",
        "interest_name": "Interest",
        "is_group_private": true,
        "is_private": true,
        "status": true
      },
      "properties": {
        "background_colour": {
          "description": "#f79432",
          "type": "string"
        },
        "description": {
          "description": "Test Interest",
          "type": "string"
        },
        "image_name": {
          "description": "test image",
          "type": "string"
        },
        "interest_name": {
          "description": "Interest",
          "type": "string"
        },
        "is_group_private": {
          "description": true,
          "type": "boolean"
        },
        "is_private": {
          "description": true,
          "type": "boolean"
        },
        "status": {
          "description": true,
          "type": "boolean"
        }
      },
      "title": "Update Interest",
      "type": "object"
    },
    "Role": {
      "description": "Role",
      "example": {
        "id": "admin",
        "name": "Admin",
        "permissions": [
          {
            "permission": -1,
            "resource_id": "users",
            "role_id": "super_admin"
          },
          {
            "permission": -1,
            "resource_id": "employees",
            "role_id": "super_admin"
          },
          {
            "permission": -1,
            "resource_id": "customer",
            "role_id": "super_admin"
          }
        ]
      },
      "title": "Role",
      "type": "object"
    },
    "CreateInterestTopic": {
      "description": "Create Interest Topic",
      "example": {
        "description": "Interest Topic Description",
        "image_name": "",
        "interest_id": "2cfd8787-315b-4f3b-8c50-83f2a14d3f3c",
        "topic_name": "Interest Topic"
      },
      "properties": {
        "description": {
          "description": "Description",
          "type": "string"
        },
        "image_name": {
          "description": "Base64 encode value",
          "type": "string"
        },
        "interest_id": {
          "description": "Interest ID",
          "type": "string"
        },
        "topic_name": {
          "description": "Title",
          "type": "string"
        }
      },
      "title": "Create Interest Topic",
      "type": "object"
    },
    "Users": {
      "description": "List of Users",
      "example": {
        "responseData": {
          "data": [
            {
              "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
              "firstName": "test",
              "lastName": "user",
              "userId": "b711bf85-963f-42ed-9728-c2047d5694fc",
              "userImage": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
            },
            {
              "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
              "firstName": "test",
              "lastName": "user",
              "userId": "b711bf85-963f-42ed-9728-c2047d5694fc",
              "userImage": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
            }
          ],
          "pagination": {
            "page": 1,
            "totalPages": 1,
            "totalRows": 2
          }
        }
      },
      "title": "List of Users",
      "type": "object"
    },
    "ReportSource": {
      "description": "Report Source Response",
      "example": {
        "response_data": {
          "id": "user",
          "name": "User"
        }
      },
      "title": "Report Source",
      "type": "object"
    },
    "ListReplies": {
      "description": "List of all Replies to a specific RoomMessage",
      "example": {
        "responseData": {
          "data": [
            {
              "comment_id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
              "description": "Thanks a lot!",
              "id": "",
              "inserted_at": "",
              "updated_at": "",
              "user": {
                "base_url": "https://tanbits-jetzy.s3.amazonaws.com/",
                "first_name": "First Name",
                "last_name": "Last Name",
                "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
              }
            },
            {
              "comment_id": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
              "description": "Thanks a lot!",
              "id": "",
              "inserted_at": "",
              "updated_at": "",
              "user": {
                "base_url": "https://tanbits-jetzy.s3.amazonaws.com/",
                "first_name": "First Name",
                "last_name": "Last Name",
                "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
                "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
              }
            }
          ],
          "pagination": {
            "page": 1,
            "total_pages": 2,
            "total_rows": 10
          }
        }
      },
      "title": "Replies list",
      "type": "object"
    },
    "Friend": {
      "description": "Friend",
      "example": {
        "friend_blocked": false,
        "id": "3a3a53d-1d55-40c2-b955-57f8d7be0232",
        "is_blocked": false,
        "is_friend": true,
        "is_request_sent": true,
        "user_id": "3a3a53d-1d55-40c2-b955-57f8d7be0233"
      },
      "title": "Friend",
      "type": "object"
    },
    "ListNotification": {
      "description": "List of Notifications",
      "example": {
        "ResponseData": {
          "data": [
            {
              "description": "Your event Trip to Neelum Valley is close, are you excited!",
              "event": "events_comming_soon",
              "id": "ef193124-d1b5-43f4-a6d5-63dc7e7f4f20",
              "insertedAt": "2022-03-01T09:05:38Z",
              "isRead": false,
              "receiverId": "a711bf85-963f-42ed-9728-c2047d5694fb",
              "resourceId": "9f096f1c-e677-4e19-a0eb-291a89492da1",
              "senderId": "a711bf85-963f-42ed-9728-c2047d5694fb",
              "user": {
                "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                "firstName": "super",
                "id": "a711bf85-963f-42ed-9728-c2047d5694fb",
                "image": "20a6f452-4dca-4c89-9ede-0002c621168b--637070709605545548--97df1b3e-9a0b-4475-8cf7-4b5356b4829d",
                "lastName": "admin"
              }
            },
            {
              "description": "Congratulations, you have succesfully created an event on Jetzy for Date 2022-01-07",
              "event": "events_by_me",
              "id": "72e6c8d3-87cf-4101-be20-e1892cb3ee4e",
              "insertedAt": "2022-03-01T09:05:38Z",
              "isRead": false,
              "receiverId": "a711bf85-963f-42ed-9728-c2047d5694fb",
              "resourceId": "9f096f1c-e677-4e19-a0eb-291a89492da1",
              "senderId": "a711bf85-963f-42ed-9728-c2047d5694fb",
              "user": {
                "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                "firstName": "super",
                "id": "a711bf85-963f-42ed-9728-c2047d5694fb",
                "image": "20a6f452-4dca-4c89-9ede-0002c621168b--637070709605545548--97df1b3e-9a0b-4475-8cf7-4b5356b4829d",
                "lastName": "admin"
              }
            }
          ],
          "pagination": {
            "page": 1,
            "totalPages": 3,
            "totalRows": 27
          },
          "unreadNotifications": 36
        }
      },
      "title": "List of Notifications",
      "type": "object"
    },
    "UserDelete": {
      "description": "Delete User Profile",
      "example": {
        "message": "User Deleted Successfully"
      },
      "title": "Delete Current User Profile",
      "type": "object"
    },
    "UserSetting": {
      "description": "User Settings",
      "example": {
        "is_follow_public": true,
        "is_show_followings": true,
        "user": {
          "first_name": "First name",
          "last_name": "Last name",
          "userId": "13a3a53d-1d55-40c2-b955-57f8d7be0232",
          "user_image": "user/3f665047-9373-4335-9d39-3099a0eb85ba.png"
        }
      },
      "properties": {
        "id": {
          "description": "ID",
          "type": "string"
        },
        "is_enable_chat": {
          "description": "Is Enable Chat",
          "type": "boolean"
        },
        "is_follow_public": {
          "description": "Is Follow Public",
          "type": "boolean"
        },
        "is_groupchat_enable": {
          "description": "Is Group chat enable",
          "type": "boolean"
        },
        "is_info": {
          "description": "Is info",
          "type": "boolean"
        },
        "is_moments_enable": {
          "description": "Is moments enable",
          "type": "boolean"
        },
        "is_profile_image_sync": {
          "description": "Is Profile Image Sync",
          "type": "boolean"
        },
        "is_push_notification": {
          "description": "Is Push Notification",
          "type": "boolean"
        },
        "is_show_followings": {
          "description": "Is show Followings",
          "type": "boolean"
        },
        "is_show_on_profile": {
          "description": "Is Show On Profile",
          "type": "boolean"
        },
        "un_subscribe": {
          "description": "Un Subscribe",
          "type": "boolean"
        },
        "user_id": {
          "description": "User ID",
          "type": "string"
        },
        "user_invite_type": {
          "description": "User Invite Type",
          "type": "integer"
        }
      },
      "title": "User Settings",
      "type": "object"
    },
    "Events": {
      "description": "Events",
      "example": {
        "response_data": {
          "FormattedAddress": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
          "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
          "description": "This is a first description test",
          "eventEndDate": "2022-01-10",
          "eventEndTime": "22:15:47",
          "eventStartDate": "2022-01-07",
          "eventStartTime": "16:15:47",
          "id": "d822b84d-a76a-446a-9daa-ab85fe537fea",
          "interestId": "c2bedfc2-7db3-4e28-bf87-dd2de088526d",
          "interestName": "Winter Sports",
          "latitude": 31.5656822,
          "longitude": 74.3141829,
          "privateChatRoom": {
            "roomId": "73914fed-d79e-4a01-b9a8-79b59737158c",
            "roomType": "event_chat",
            "roomUsers": [
              {
                "firstName": "Super",
                "lastName": "Admin",
                "roomId": "73914fed-d79e-4a01-b9a8-79b59737158c",
                "userId": "a711bf85-963f-42ed-9728-c2047d5694fb"
              }
            ],
            "userEvent": {
              "FormattedAddress": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
              "description": "This is a first description test",
              "eventAttendees": [],
              "eventEndDate": "2022-01-10",
              "eventEndTime": "22:15:47",
              "eventStartDate": "2022-01-07",
              "eventStartTime": "16:15:47",
              "id": "5855e460-2e73-46a6-95bd-18bae67d89ac",
              "interestId": "c2bedfc2-7db3-4e28-bf87-dd2de088526d",
              "interestName": "Winter Sports",
              "latitude": 31.5656822,
              "longitude": 74.3141829,
              "roomId": "70086df1-f42f-4fc7-bdf7-5dbffc84deb9",
              "user": {
                "firstName": "Super",
                "lastName": "Admin",
                "userId": "a711bf85-963f-42ed-9728-c2047d5694fb"
              },
              "userEventImages": [
                {
                  "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                  "id": "a711bf85-963f-42ed-9728-c2047d5694fb",
                  "image": "user_event/b3e280a5-7808-41fb-8c64-8ee46273ccf4.png"
                }
              ]
            }
          },
          "room_id": "",
          "user": {
            "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
            "firstName": "test",
            "lastName": "user",
            "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
            "userImage": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
          },
          "userEventImages": [
            {
              "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
              "id": "a711bf85-963f-42ed-9728-c2047d5694fb",
              "image": "user_event/b3e280a5-7808-41fb-8c64-8ee46273ccf4.png"
            }
          ]
        }
      },
      "title": "Events",
      "type": "object"
    },
    "CreateGuestInterest": {
      "description": "Create GuestInterest",
      "example": {
        "device_id": "admin",
        "interest_list": [
          {
            "interest_id": "2cfd8787-315b-4f3b-8c50-83f2a14d3f3c",
            "is_member": true
          },
          {
            "interest_id": "41fe4093-5be0-434f-9db6-82ceb9f91948",
            "is_member": false
          }
        ]
      },
      "properties": {
        "device_id": {
          "description": "Device ID",
          "type": "string"
        },
        "interest_list": {
          "description": "interest ids",
          "type": "array"
        }
      },
      "title": "Create GuestInterest",
      "type": "object"
    },
    "CreateComment": {
      "description": "Create RoomMessage",
      "example": {
        "message": "Perfect!!."
      },
      "properties": {
        "message": {
          "description": "RoomMessage",
          "type": "string"
        },
        "updated_by": {
          "description": "Updated By",
          "type": "string"
        }
      },
      "title": "Create RoomMessage",
      "type": "object"
    },
    "SyncContacts": {
      "description": "User Update",
      "example": {
        "emails": [
          "superadmin@jetzy.com",
          "superadmin23@jetzy.com",
          "superadmin@jetzy.com"
        ]
      },
      "properties": {
        "emails": {
          "description": "Email list of User's Contacts",
          "type": "array"
        }
      },
      "title": "User Update",
      "type": "object"
    },
    "UpdatePermission": {
      "description": "Update Permission",
      "example": {
        "id": "bbe2d554-b72b-4a46-82ac-61fd0121d448",
        "permission": 4,
        "resource_id": "comments",
        "role_id": "super_admin"
      },
      "properties": {
        "permissions": {
          "description": "List Of Permissions",
          "type": "array"
        },
        "role": {
          "description": "Permission",
          "type": "string"
        }
      },
      "title": "Update Permission",
      "type": "object"
    },
    "UserEmailResponse": {
      "example": {
        "ResponseData": {
          "message": "Successfully done"
        }
      },
      "title": "User Email Verification",
      "type": "object"
    },
    "UpdateResource": {
      "description": "Update Resource",
      "example": {
        "res": "Comments Reply"
      },
      "properties": {
        "res": {
          "description": "Comments Reply",
          "type": "string"
        }
      },
      "title": "Update Resource",
      "type": "object"
    },
    "RedeemRewardOffer": {
      "description": "Redeem Reward Offer",
      "example": {
        "ResponseData": {
          "message": "Point has been redeemed",
          "status": "1"
        }
      },
      "title": "Redeem Reward Offer",
      "type": "object"
    },
    "ShowEvent": {
      "description": "Event Details",
      "example": {
        "response_data": {
          "privateChatRoom": {
            "roomId": "73914fed-d79e-4a01-b9a8-79b59737158c",
            "roomType": "event_chat",
            "roomUsers": [
              {
                "firstName": "Super",
                "lastName": "Admin",
                "roomId": "73914fed-d79e-4a01-b9a8-79b59737158c",
                "userId": "a711bf85-963f-42ed-9728-c2047d5694fb"
              }
            ],
            "userEvent": {
              "FormattedAddress": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
              "description": "This is a first description test",
              "eventAttendees": [],
              "eventEndDate": "2022-01-10",
              "eventEndTime": "22:15:47",
              "eventStartDate": "2022-01-07",
              "eventStartTime": "16:15:47",
              "id": "5855e460-2e73-46a6-95bd-18bae67d89ac",
              "interestId": "c2bedfc2-7db3-4e28-bf87-dd2de088526d",
              "interestName": "Winter Sports",
              "latitude": 31.5656822,
              "longitude": 74.3141829,
              "roomId": "70086df1-f42f-4fc7-bdf7-5dbffc84deb9",
              "user": {
                "firstName": "Super",
                "lastName": "Admin",
                "userId": "a711bf85-963f-42ed-9728-c2047d5694fb"
              },
              "userEventImages": [
                {
                  "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                  "id": "a711bf85-963f-42ed-9728-c2047d5694fb",
                  "image": "user_event/b3e280a5-7808-41fb-8c64-8ee46273ccf4.png"
                }
              ]
            }
          },
          "userEvent": {
            "FormattedAddress": "Suzy Queue, 4455 Landing Lange, APT 4, Louisville, KY 40018-1234",
            "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
            "description": "This is a first description test",
            "eventEndDate": "2022-01-10",
            "eventEndTime": "22:15:47",
            "eventStartDate": "2022-01-07",
            "eventStartTime": "16:15:47",
            "id": "d822b84d-a76a-446a-9daa-ab85fe537fea",
            "interestId": "c2bedfc2-7db3-4e28-bf87-dd2de088526d",
            "interestName": "Winter Sports",
            "latitude": 31.5656822,
            "longitude": 74.3141829,
            "room_id": "",
            "user": {
              "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
              "firstName": "test",
              "lastName": "user",
              "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
              "userImage": "user-0f58276d-05d4-4311-9af0-253e8aaaafe4.jpg"
            },
            "userEventImages": [
              {
                "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
                "id": "a711bf85-963f-42ed-9728-c2047d5694fb",
                "image": "user_event/b3e280a5-7808-41fb-8c64-8ee46273ccf4.png"
              }
            ]
          }
        }
      },
      "title": "Event Details",
      "type": "object"
    },
    "UpdateFrequentlyAskedQuestion": {
      "description": "Update Frequently Asked Question",
      "example": {
        "answer": "we connect people",
        "category": "about us",
        "id": "3df94ca6-efed-4212-a45b-0c55fdcdfb0f",
        "image_name": "",
        "question": "How are we?"
      },
      "properties": {
        "answer": {
          "description": "Answer",
          "type": "string"
        },
        "category": {
          "description": "category",
          "type": "string"
        },
        "id": {
          "description": "Frequently Asked Question ID",
          "type": "string"
        },
        "question": {
          "description": "Question",
          "type": "string"
        }
      },
      "title": "Update Frequently Asked Question",
      "type": "object"
    },
    "ListBlock": {
      "description": "List of Blocked User",
      "example": [
        {
          "first_name": "First Name",
          "is_active": true,
          "last_name": "Last Name",
          "user_id": "b640adbb-75a3-47a4-b3b3-77ef718d2ah1",
          "user_image": ""
        },
        {
          "first_name": "First Name",
          "is_active": true,
          "last_name": "Last Name",
          "user_id": "b640adbb-75a3-47a4-b3b3-77ef718d2ah1",
          "user_image": ""
        }
      ],
      "title": "List of Blocked User",
      "type": "object"
    },
    "ForgetPassword": {
      "description": "User Forget Password Schema",
      "example": {
        "email": "superadmin@jetzy.com",
        "otp_code": "",
        "password": ""
      },
      "properties": {
        "email": {
          "description": "email",
          "type": "string"
        },
        "otp_code": {
          "description": "OTP",
          "type": "integer"
        },
        "password": {
          "description": "New Password",
          "type": "string"
        }
      },
      "required": [
        "email"
      ],
      "title": "Forget Password User Schema",
      "type": "object"
    },
    "LikePost": {
      "description": "Like Post",
      "example": {
        "item_id": "db384dee-a527-4933-87ba-d090c142e922",
        "liked": true
      },
      "properties": {
        "item_id": {
          "description": "Item(post) id",
          "type": "string"
        },
        "liked": {
          "description": "Liked i.e true or false",
          "type": "boolean"
        }
      },
      "title": "Like Post",
      "type": "object"
    },
    "AddEventAttendee": {
      "description": "Add New Event Attendee to Group Chat",
      "example": {
        "user_event_id": "75e19e13-8ec1-4024-b454-4e1313d5cfbf",
        "user_id": "75e19e13-8ec1-4024-b454-4e1313d5cfbf"
      },
      "properties": {
        "user_event_id": {
          "description": "User event ID",
          "type": "string"
        },
        "user_id": {
          "description": "User ID",
          "type": "string"
        }
      },
      "title": "Add New Event Attendee to Group Chat",
      "type": "object"
    },
    "InterestTopics": {
      "description": "User Interest By Room ID",
      "example": {
        "responseData": {
          "data": [
            {
              "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
              "createdBy": "",
              "createdById": "a711bf85-963f-42ed-9728-c2047d5694fb",
              "deletedAt": "",
              "description": "Interest Topic Description",
              "id": "74e43387-18a6-4d94-b03a-3557bfabd9ba",
              "imageName": "",
              "insertedAt": "2022-01-17T07:38:03Z",
              "interestId": "2cfd8787-315b-4f3b-8c50-83f2a14d3f3c",
              "roomId": "ae902a4c-aef7-405e-8f3a-6ccd47b98c6e",
              "topicName": "Interest Topic11",
              "updatedAt": "2022-01-17T07:38:03Z"
            },
            {
              "baseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
              "createdBy": "",
              "createdById": "a711bf85-963f-42ed-9728-c2047d5694fb",
              "deletedAt": "",
              "description": "Interest Topic Description",
              "id": "77a92152-1f7f-4d1d-9b8a-bcf08dd373da",
              "imageName": "",
              "insertedAt": "2022-01-17T07:37:55Z",
              "interestId": "2cfd8787-315b-4f3b-8c50-83f2a14d3f3c",
              "roomId": "f23e8ac5-5cda-401e-af18-200a18b63ced",
              "topicName": "Interest Topic9",
              "updatedAt": "2022-01-17T07:37:55Z"
            }
          ],
          "pagination": {
            "page": 1,
            "totalPages": 1,
            "totalRows": 2
          }
        }
      },
      "title": "User Interest by Room ID",
      "type": "object"
    },
    "LikeComment": {
      "description": "Like Comment",
      "example": {
        "comment_id": "db384dee-a527-4933-87ba-d090c142e922",
        "is_liked": true
      },
      "properties": {
        "comment_id": {
          "description": "Comment id",
          "type": "string"
        },
        "is_liked": {
          "description": "Liked i.e true or false",
          "type": "boolean"
        }
      },
      "title": "Like Comment",
      "type": "object"
    },
    "AddUserToChat": {
      "description": "Add a User to a chat by their email ID",
      "example": {
        "responseData": {
          "first_name": "first name",
          "image_name": "User Image",
          "last_name": "last name",
          "room_id": "215f1fb5-69ee-4f53-a81f-c277c3f048fa",
          "user_id": "215f1fb5-69ee-4f53-a81f-c277c3f048fa"
        }
      },
      "title": "Add User to a chat",
      "type": "object"
    },
    "UserInterests": {
      "description": "User Interest By Room ID",
      "example": {
        "responseData": {
          "data": [
            {
              "aseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
              "email": "superadmin2@jetzy.com",
              "firstName": "test",
              "lastName": "name",
              "userId": "3d5c7bb8-453b-4b89-ab5d-0d60dac63b34",
              "userImage": "user/3ea14269-bc6f-4bdc-a1f4-99f70135cb8c.jpg"
            },
            {
              "aseUrl": "https://tanbits-jetzy.s3.amazonaws.com/",
              "email": "superadmin@jetzy.com",
              "firstName": "Super",
              "lastName": "Admin",
              "userId": "a711bf85-963f-42ed-9728-c2047d5694fb",
              "userImage": "user/3ea14269-bc6f-4bdc-a1f4-99f70135cb8c.jpg"
            }
          ],
          "pagination": {
            "page": 1,
            "totalPages": 1,
            "totalRows": 2
          }
        }
      },
      "title": "User Interest by Room ID",
      "type": "object"
    }
  },
  "info": {
    "contact": {
      "email": "hammadciit@gmail.com",
      "name": "Api Developer: Hammad"
    },
    "description": "This is detailed api documentation for all of the client side apps to connect with our `black-boxed-server`. Black boxed server means you really don't need to worry about what is coded at server side and how things are being implemented. Even you don't need to know what kind of tech stack is being used at backend. This `REST Api` is just like thousands of other APIs available over the internet. If you want to make sure you really understand REST Api concept please spare 12 minutes to [watch this youtube video](https://youtu.be/qVTAB8Z2VmA).\n\n**Important:** There are several things you need to understand before start reading / using this documentation:\n\n1- All requests and responses are sent / received as JSON format. If you do not understand JSON format please take a minute to [watch this youtube video](https://youtu.be/wI1CWzNtE-M).\n\n2- You don't need to use ~~postman~~ for testing any endpoint, you can do everything here. The Greatest [Swagger Specifications](https://swagger.io/specification/) is being used to prepare api documentation and [Swagger UI](https://swagger.io/swagger-ui/) to prepare this interface. We suggest you to understand how to use this documentation to get maximum benefit out of it, please [watch this youtube video](https://youtu.be/Nymyc8-WeHM).\n\n4- Some endpoints are secured, you can see lock icon in front of them. You cannot access any endpoint without login / JWT token. To Acquire JWT token, first of all hit `/sign_in` endpoint, pass your login details and acquire the token. Once server returns token, copy it to clipboard and paste to authorization modal by clicking on `Authorize` button on the right side above the endpoints. Once you have entered the token, all lock icons will get bold to notify that you can hit them now.\n\n**Note:** Api documentation is not completed yet, so you may find some parts missing here but most of your need will be fulfilled. You can contact API developer below anytime.\n\n",
    "title": "Jetzy REST Api",
    "version": "1.0"
  },
  "paths": {
    "/add-invited_user_in_room": {
      "post": {
        "description": "Add Invited User in Room",
        "operationId": "ApiWeb.UserChatController.add_user_in_room_with_referrer_code",
        "parameters": [
          {
            "description": "Add invited user in room",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddInvitedUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {},
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Add Invited User in Room",
        "tags": [
          "UserChat"
        ]
      }
    },
    "/guest/user-events": {
      "get": {
        "description": "User Events",
        "operationId": "ApiWeb.UserEventController.index_for_guest",
        "parameters": [
          {
            "description": "Event Start Date",
            "in": "query",
            "name": "event_start_date",
            "required": false,
            "type": "string"
          },
          {
            "description": "Event End Date",
            "in": "query",
            "name": "event_end_date",
            "required": false,
            "type": "string"
          },
          {
            "description": "Event Start Time",
            "in": "query",
            "name": "event_start_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "Event End Time",
            "in": "query",
            "name": "event_end_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "Interests",
            "in": "query",
            "name": "interests",
            "required": false,
            "type": "map"
          },
          {
            "description": "User Latitude",
            "in": "query",
            "name": "latitude",
            "required": false,
            "type": "float"
          },
          {
            "description": "User Longitude",
            "in": "query",
            "name": "longitude",
            "required": false,
            "type": "float"
          },
          {
            "description": "Page",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListEvent"
            }
          }
        },
        "summary": "User Events",
        "tags": [
          "UserEvent"
        ]
      }
    },
    "/post/{post_id}/comments": {
      "get": {
        "description": "Get List OF Comments",
        "operationId": "ApiWeb.CommentController.index",
        "parameters": [
          {
            "description": "Post ID",
            "in": "path",
            "name": "post_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page no.",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListComment"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get List Of Comments",
        "tags": [
          "Comment"
        ]
      }
    },
    "/reward-offers": {
      "get": {
        "description": "List Reward Offers",
        "operationId": "ApiWeb.RewardOfferController.index",
        "parameters": [
          {
            "description": "Page",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          },
          {
            "description": "User Longitude",
            "in": "query",
            "name": "user_longitude",
            "required": false,
            "type": "float"
          },
          {
            "description": "User Latitude",
            "in": "query",
            "name": "user_latitude",
            "required": false,
            "type": "float"
          },
          {
            "description": "Location",
            "in": "query",
            "name": "location",
            "required": false,
            "type": "string"
          },
          {
            "description": "Offer Name",
            "in": "query",
            "name": "offer_name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Offer Description",
            "in": "query",
            "name": "offer_description",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListRewardOffers"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "List Reward Offers",
        "tags": [
          "RewardOffer"
        ]
      },
      "post": {
        "description": "Create new Reward Offer",
        "operationId": "ApiWeb.RewardOfferController.create",
        "parameters": [
          {
            "description": "Params for Creating New Reward Offer",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRewardOffer"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/RewardOffer"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create new Reward Offer",
        "tags": [
          "RewardOffer"
        ]
      }
    },
    "/permissions": {
      "post": {
        "description": "Create Permission\r\n    GET and permission == 1\r\n    [GET, POST] and permission == 2\r\n    [GET, POST, UPDATE, PUT] and permission == 3\r\n    [GET, POST, UPDATE, PUT, DELETE and permission == 4",
        "operationId": "ApiWeb.PermissionController.create",
        "parameters": [
          {
            "description": "Create Permission params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePermission"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Permission"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create Permission",
        "tags": [
          "Permission"
        ]
      }
    },
    "/roles/{id}": {
      "delete": {
        "description": "Delete Role",
        "operationId": "ApiWeb.RoleController.delete",
        "parameters": [
          {
            "description": "Role ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete Role",
        "tags": [
          "Role"
        ]
      },
      "get": {
        "description": "Get Role By ID",
        "operationId": "ApiWeb.RoleController.show",
        "parameters": [
          {
            "description": "Role ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Role By ID",
        "tags": [
          "Role"
        ]
      },
      "put": {
        "description": "Update Role",
        "operationId": "ApiWeb.RoleController.update",
        "parameters": [
          {
            "description": "Role ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Update Role Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRole"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update Role",
        "tags": [
          "Role"
        ]
      }
    },
    "/add-user-image": {
      "post": {
        "description": "User will be able to upload a base 64 encoded image",
        "operationId": "ApiWeb.UserController.add_user_profile_image",
        "parameters": [
          {
            "description": "base 64 URL of image for add user profile image",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserImage"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserImageResponse"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Add User Profile Image",
        "tags": [
          "User"
        ]
      }
    },
    "/comments/{parent_sref}/replies": {
      "get": {
        "description": "Get List OF RoomMessage Replies",
        "operationId": "ApiWeb.CommentReplyController.index",
        "parameters": [
          {
            "description": "Parent RoomMessage ID",
            "in": "path",
            "name": "parent_sref",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListReplies"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get List Of RoomMessage Replies",
        "tags": [
          "CommentReply"
        ]
      },
      "post": {
        "description": "Create Reply by giving the ID of the post and write your comment in the body",
        "operationId": "ApiWeb.CommentReplyController.create",
        "parameters": [
          {
            "description": "Parent RoomMessage ID",
            "in": "path",
            "name": "parent_sref",
            "required": true,
            "type": "string"
          },
          {
            "description": "Create Reply params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateComment"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Reply"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create Reply",
        "tags": [
          "CommentReply"
        ]
      }
    },
    "/guest/guest-interest": {
      "post": {
        "description": "Create GuestInterest by adding correct user_id and role_id according to your case",
        "operationId": "ApiWeb.GuestInterestController.create",
        "parameters": [
          {
            "description": "Create GuestInterest params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateGuestInterest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/CreateGuestInterest"
            }
          }
        },
        "summary": "Create GuestInterest",
        "tags": [
          "GuestInterest"
        ]
      }
    },
    "/resources": {
      "get": {
        "description": "Get List OF Resources",
        "operationId": "ApiWeb.ResourceController.index",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListResource"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get List OF Resources",
        "tags": [
          "Resource"
        ]
      },
      "post": {
        "description": "Create Resource",
        "operationId": "ApiWeb.ResourceController.create",
        "parameters": [
          {
            "description": "Create Resource params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateResource"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create Resource",
        "tags": [
          "Resource"
        ]
      }
    },
    "/room-user": {
      "delete": {
        "description": "Delete a user from a room by ID",
        "operationId": "ApiWeb.UserChatController.delete",
        "parameters": [
          {
            "description": "Add a user to a chat room",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRoomUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/DeleteUserFromChat"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete a User from Chat",
        "tags": [
          "UserChat"
        ]
      },
      "post": {
        "description": "Add a user to a chat room by their email ID",
        "operationId": "ApiWeb.UserChatController.create",
        "parameters": [
          {
            "description": "Add a user to a chat room",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddRoomUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/AddUserToChat"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Add User to Chat",
        "tags": [
          "UserChat"
        ]
      }
    },
    "/guest/comments/{parent_sref}/replies": {
      "get": {
        "description": "Get List OF RoomMessage Replies for guest",
        "operationId": "ApiWeb.CommentReplyController.guest_index",
        "parameters": [
          {
            "description": "Parent RoomMessage ID",
            "in": "path",
            "name": "parent_sref",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListReplies"
            }
          }
        },
        "summary": "Get List Of RoomMessage Replies for guest",
        "tags": [
          "CommentReply"
        ]
      }
    },
    "/get-interest-events": {
      "get": {
        "description": "Get data by Interest ID",
        "operationId": "ApiWeb.InterestController.get_interest_events",
        "parameters": [
          {
            "description": "Interest ID",
            "in": "query",
            "name": "interest_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page no.",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/InterestEvents"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Events by Interest ID",
        "tags": [
          "Interest"
        ]
      }
    },
    "/forget-password": {
      "post": {
        "description": "ForgetPassword with email and new password",
        "operationId": "ApiWeb.UserController.forget_password",
        "parameters": [
          {
            "description": "ForgetPassword Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForgetPassword"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "summary": "ForgetPassword",
        "tags": [
          "User"
        ]
      }
    },
    "/user-settings": {
      "get": {
        "description": "Show User Settings",
        "operationId": "ApiWeb.UserSettingController.show_user_settings",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserSetting"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Show User Settings",
        "tags": [
          "UserSetting"
        ]
      },
      "put": {
        "description": "Update User Settings",
        "operationId": "ApiWeb.UserSettingController.update",
        "parameters": [
          {
            "description": "Update User Settings",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSetting"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserSetting"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update User Settings",
        "tags": [
          "UserSetting"
        ]
      }
    },
    "/guest/post/{post_id}/comments": {
      "get": {
        "description": "Get List OF Comments for guest user",
        "operationId": "ApiWeb.CommentController.guest_index",
        "parameters": [
          {
            "description": "Post ID",
            "in": "path",
            "name": "post_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page no.",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListComment"
            }
          }
        },
        "summary": "Get List Of Comments for guest user",
        "tags": [
          "Comment"
        ]
      }
    },
    "/request-reactivate-account": {
      "post": {
        "description": "Send email to admin if a user's account gets deactivated due to a report by another user",
        "operationId": "ApiWeb.UserController.request_admin_to_reactivate_account",
        "parameters": [
          {
            "description": "Send Mail to admin",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestAdmin"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserEmailResponse"
            }
          }
        },
        "summary": "Request admin for account reopening if it got deactivated",
        "tags": [
          "User"
        ]
      }
    },
    "/user-chats": {
      "get": {
        "description": "Get list (rooms) of all user chats",
        "operationId": "ApiWeb.UserChatController.user_chats",
        "parameters": [
          {
            "description": "Page no.",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Search String",
            "in": "query",
            "name": "search_string",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserChatRoomsList"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "User Chats",
        "tags": [
          "UserChat"
        ]
      }
    },
    "/remove-event-attendee": {
      "delete": {
        "description": "Delete Event Attendee",
        "operationId": "ApiWeb.UserEventController.delete_event_attendee",
        "parameters": [
          {
            "description": "Event ID",
            "in": "query",
            "name": "event_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "query",
            "name": "user_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ShowEventByUserID"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete Event Attendee",
        "tags": [
          "UserEvent"
        ]
      }
    },
    "/sign-up": {
      "post": {
        "description": "Signup the User with the params in the body. if you set is_referral=false, then you dont need any referral code. ",
        "operationId": "ApiWeb.UserController.create",
        "parameters": [
          {
            "description": "Signup the User with the params in the body. if you set is_referral=false, then you dont need any referral code",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignUp"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "summary": "User Signup",
        "tags": [
          "User"
        ]
      }
    },
    "/guest/guest-interest/{device_id}": {
      "get": {
        "description": "Get GuestInterest By ID",
        "operationId": "ApiWeb.GuestInterestController.show",
        "parameters": [
          {
            "description": "Device ID",
            "in": "path",
            "name": "device_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/GuestInterest"
            }
          }
        },
        "summary": "Get GuestInterest By ID",
        "tags": [
          "GuestInterest"
        ]
      }
    },
    "/sync-contacts": {
      "post": {
        "description": "Synced Contacts and return existing and non-existing users",
        "operationId": "ApiWeb.UserController.sync_contacts",
        "parameters": [
          {
            "description": "Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SyncContacts"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/SyncContactsResponse"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "User Sync Contacts",
        "tags": [
          "User"
        ]
      }
    },
    "/admin/report-messages-review": {
      "get": {
        "description": "Get list of Report Message. This is for admin only",
        "operationId": "ApiWeb.ReportMessagesController.list_report_messages",
        "parameters": [
          {
            "description": "page No",
            "in": "path",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListReportMessages"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get lit of Report Message",
        "tags": [
          "ReportMessages"
        ]
      }
    },
    "/report-messages": {
      "get": {
        "description": "Get Report Message",
        "operationId": "ApiWeb.ReportMessagesController.index",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ReportMessage"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Report Message",
        "tags": [
          "ReportMessages"
        ]
      },
      "post": {
        "description": "It will Create a new Report Message and deactivate the user to be reported.",
        "operationId": "ApiWeb.ReportMessagesController.create",
        "parameters": [
          {
            "description": "Create Report Message params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateReportMessage"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ReportMessage"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create Report Message",
        "tags": [
          "ReportMessages"
        ]
      }
    },
    "/user": {
      "post": {
        "description": "Update User Password",
        "operationId": "ApiWeb.UserController.update",
        "parameters": [
          {
            "description": "Update Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserPassword"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update User Password",
        "tags": [
          "User"
        ]
      }
    },
    "/delete-user": {
      "delete": {
        "description": "You can delete your self",
        "operationId": "ApiWeb.UserController.delete_user",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserDelete"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete User",
        "tags": [
          "User"
        ]
      }
    },
    "/user-profile-update": {
      "post": {
        "description": "Update user by changing the gender and other params according to your profile.",
        "operationId": "ApiWeb.UserController.update_profile",
        "parameters": [
          {
            "description": "Update User Profile Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserProfile"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update User Profile",
        "tags": [
          "User"
        ]
      }
    },
    "/update-status": {
      "post": {
        "description": "Admin Update user Status",
        "operationId": "ApiWeb.UserController.update_status",
        "parameters": [
          {
            "description": "Update Status Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateStatus"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UpdateStatus"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "User Update Status",
        "tags": [
          "User"
        ]
      }
    },
    "/guest/timeline": {
      "get": {
        "description": "Timeline",
        "operationId": "ApiWeb.PostController.index_for_guest",
        "parameters": [
          {
            "description": "Page",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Event Start Date",
            "in": "query",
            "name": "event_start_date",
            "required": false,
            "type": "string"
          },
          {
            "description": "Event End Date",
            "in": "query",
            "name": "event_end_date",
            "required": false,
            "type": "string"
          },
          {
            "description": "Event Start Time",
            "in": "query",
            "name": "event_start_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "Event End Time",
            "in": "query",
            "name": "event_end_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "User Latitude",
            "in": "query",
            "name": "user_latitude",
            "required": false,
            "type": "float"
          },
          {
            "description": "User Longitude",
            "in": "query",
            "name": "user_longitude",
            "required": false,
            "type": "float"
          },
          {
            "description": "Comma seprated Interest IDs",
            "in": "query",
            "name": "interest_ids",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListPost"
            }
          }
        },
        "summary": "Timeline",
        "tags": [
          "Post"
        ]
      }
    },
    "/users-for-chat": {
      "get": {
        "description": "List Users to add in a group chat",
        "operationId": "ApiWeb.UserChatController.users_for_chat",
        "parameters": [
          {
            "description": "Page no.",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Search",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Show Users",
        "tags": [
          "UserChat"
        ]
      }
    },
    "/validate-referral-code": {
      "post": {
        "description": "Validates if invite code is correct",
        "operationId": "ApiWeb.UserController.validate_referral",
        "parameters": [
          {
            "description": "Invite Code Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InviteCode"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/InviteCodeResponse"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Validate Invite Code",
        "tags": [
          "User"
        ]
      }
    },
    "/user-events-attendees/{id}": {
      "get": {
        "description": "Get Event Attendees By ID",
        "operationId": "ApiWeb.UserEventController.user_event_attendees",
        "parameters": [
          {
            "description": "Event ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page no.",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ShowEventAttendees"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Event Attendees By ID",
        "tags": [
          "UserEvent"
        ]
      }
    },
    "/user-favourite/{id}": {
      "get": {
        "description": "Get User Favourite ID",
        "operationId": "ApiWeb.UserFavoriteController.show",
        "parameters": [
          {
            "description": "User Favourite ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserFavorite"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get User Favourite By ID",
        "tags": [
          "UserFavorite"
        ]
      },
      "put": {
        "description": "Update User Favourite",
        "operationId": "ApiWeb.UserFavoriteController.update",
        "parameters": [
          {
            "description": "User Favourite ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Update User Favourite Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserFavorite"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserFavorite"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update User Favourite",
        "tags": [
          "UserFavorite"
        ]
      }
    },
    "/interests-feed": {
      "get": {
        "description": "It will Create a interests for feed.",
        "operationId": "ApiWeb.InterestController.interests_feed",
        "parameters": [
          {
            "description": "Page no.",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Interest"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "interests_feed-for-user",
        "tags": [
          "Interest"
        ]
      }
    },
    "/user-roles": {
      "post": {
        "description": "Create UserRole by adding correct user_id and role_id according to your case",
        "operationId": "ApiWeb.UserRoleController.create",
        "parameters": [
          {
            "description": "Create UserRole params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserRole"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserRole"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create UserRole",
        "tags": [
          "UserRole"
        ]
      }
    },
    "/delete-user-chat": {
      "delete": {
        "description": "Delete a chat",
        "operationId": "ApiWeb.UserChatController.delete_user_chat",
        "parameters": [
          {
            "description": "Room ID",
            "in": "query",
            "name": "room_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "status": "Chat Deleted"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete a chat",
        "tags": [
          "UserChat"
        ]
      }
    },
    "/friend": {
      "post": {
        "description": "Create Friend Request by friend id",
        "operationId": "ApiWeb.UserFriendController.create",
        "parameters": [
          {
            "description": "Create Friend params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFriend"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Friend"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create Friend Request",
        "tags": [
          "UserFriend"
        ]
      }
    },
    "/roles/{ids}/permissions": {
      "get": {
        "description": "Get List Of Permissions",
        "operationId": "ApiWeb.PermissionController.index",
        "parameters": [
          {
            "description": "Enter Roles i.e, super_admin,admin",
            "in": "path",
            "name": "ids",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListPermission"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get List Of Permissions",
        "tags": [
          "Permission"
        ]
      }
    },
    "/start-group-chat": {
      "post": {
        "description": "Start a group chat",
        "operationId": "ApiWeb.UserChatController.start_group_chat",
        "parameters": [
          {
            "description": "returns that started chat",
            "in": "body",
            "name": "user_ids",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartGroupChat"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ChatRoomInListing"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Start a group chat",
        "tags": [
          "UserChat"
        ]
      }
    },
    "/social-sign-up": {
      "post": {
        "description": "Social Sign up with Google, Facebook, Apple and can also add referral code here",
        "operationId": "ApiWeb.SocialAuthController.social_sign_up",
        "parameters": [
          {
            "description": "Social Sign Up Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SocialSignUp"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/SocialSignUp"
            }
          }
        },
        "summary": "User Social Sign up Google, Facebook, Apple, referral code",
        "tags": [
          "SocialAuth"
        ]
      }
    },
    "/like": {
      "post": {
        "description": "Create/Delete Post Like by adding item_id and item_type in the params",
        "operationId": "ApiWeb.LikeController.like_post",
        "parameters": [
          {
            "description": "like post from params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LikePost"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserEventLike"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create/Delete Post Like",
        "tags": [
          "Like"
        ]
      }
    },
    "/permissions/{id}": {
      "delete": {
        "description": "Delete Permission",
        "operationId": "ApiWeb.PermissionController.delete",
        "parameters": [
          {
            "description": "Permission ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Permission"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete Permission",
        "tags": [
          "Permission"
        ]
      },
      "put": {
        "description": "Update Permission\r\n    GET and permission == 1\r\n    [GET, POST] and permission == 2\r\n    [GET, POST, UPDATE, PUT] and permission == 3\r\n    [GET, POST, UPDATE, PUT, DELETE and permission == 4",
        "operationId": "ApiWeb.PermissionController.update",
        "parameters": [
          {
            "description": "Permission ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Update Permission Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePermission"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Permission"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update Permission",
        "tags": [
          "Permission"
        ]
      }
    },
    "/nearby-users": {
      "get": {
        "description": "Nearby Users",
        "operationId": "ApiWeb.UserController.nearby_users",
        "parameters": [
          {
            "description": "Page",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          },
          {
            "description": "User Latitude",
            "in": "query",
            "name": "user_latitude",
            "required": false,
            "type": "float"
          },
          {
            "description": "User Longitude",
            "in": "query",
            "name": "user_longitude",
            "required": false,
            "type": "float"
          },
          {
            "description": "First Name",
            "in": "query",
            "name": "first_name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Last Name",
            "in": "query",
            "name": "last_name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Age To",
            "in": "query",
            "name": "age_to",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Age From",
            "in": "query",
            "name": "age_from",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Is Traveler",
            "in": "query",
            "name": "is_traveler",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Is Local",
            "in": "query",
            "name": "is_local",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Gender",
            "in": "query",
            "name": "gender",
            "required": false,
            "type": "string"
          },
          {
            "description": "Is Friend",
            "in": "query",
            "name": "is_friend",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Comma seprated Interest IDs ",
            "in": "query",
            "name": "interest_ids",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Nearby Users",
        "tags": [
          "User"
        ]
      }
    },
    "/interest-topic-list/{interest_id}": {
      "get": {
        "description": "Get List OF Interest Topics",
        "operationId": "ApiWeb.InterestTopicController.index",
        "parameters": [
          {
            "description": "Interest ID",
            "in": "path",
            "name": "interest_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListInterestTopic"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get List OF Interest Topics",
        "tags": [
          "InterestTopic"
        ]
      }
    },
    "/user-events": {
      "get": {
        "description": "User Events",
        "operationId": "ApiWeb.UserEventController.index",
        "parameters": [
          {
            "description": "Event Start Date",
            "in": "query",
            "name": "event_start_date",
            "required": false,
            "type": "string"
          },
          {
            "description": "Event End Date",
            "in": "query",
            "name": "event_end_date",
            "required": false,
            "type": "string"
          },
          {
            "description": "Event Start Time",
            "in": "query",
            "name": "event_start_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "Event End Time",
            "in": "query",
            "name": "event_end_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "Interests",
            "in": "query",
            "name": "interests",
            "required": false,
            "type": "map"
          },
          {
            "description": "User Latitude",
            "in": "query",
            "name": "latitude",
            "required": false,
            "type": "float"
          },
          {
            "description": "User Longitude",
            "in": "query",
            "name": "longitude",
            "required": false,
            "type": "float"
          },
          {
            "description": "Page",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListEvent"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "User Events",
        "tags": [
          "UserEvent"
        ]
      },
      "post": {
        "description": "Create a new event with this params. The image is base 64 encoded.",
        "operationId": "ApiWeb.UserEventController.create",
        "parameters": [
          {
            "description": "Create a new event with this params. The image is base 64 encoded.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateEvent"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create New Event",
        "tags": [
          "UserEvent"
        ]
      }
    },
    "/guest/nearby-users": {
      "get": {
        "description": "Guest Nearby Users",
        "operationId": "ApiWeb.UserController.nearby_users_for_guest",
        "parameters": [
          {
            "description": "Page",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          },
          {
            "description": "User Longitude",
            "in": "query",
            "name": "user_longitude",
            "required": false,
            "type": "float"
          },
          {
            "description": "User Latitude",
            "in": "query",
            "name": "user_latitude",
            "required": false,
            "type": "float"
          },
          {
            "description": "First Name",
            "in": "query",
            "name": "first_name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Last Name",
            "in": "query",
            "name": "last_name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Age To",
            "in": "query",
            "name": "age_to",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Age From",
            "in": "query",
            "name": "age_from",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Is Traveler",
            "in": "query",
            "name": "is_traveler",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Is Local",
            "in": "query",
            "name": "is_local",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Gender",
            "in": "query",
            "name": "gender",
            "required": false,
            "type": "string"
          },
          {
            "description": "Is Friend",
            "in": "query",
            "name": "is_friend",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Comma seprated Interest IDs ",
            "in": "query",
            "name": "interest_ids",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "summary": "Guest Nearby Users",
        "tags": [
          "User"
        ]
      }
    },
    "/redeem-reward/{id}": {
      "get": {
        "description": "Redeem Reward Offer By ID",
        "operationId": "ApiWeb.RewardOfferController.redeem_reward",
        "parameters": [
          {
            "description": "Reward Offer ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/RedeemRewardOffer"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Redeem Reward Offer By ID",
        "tags": [
          "RewardOffer"
        ]
      }
    },
    "/faqs/{id}": {
      "delete": {
        "description": "Delete Frequently Asked Question",
        "operationId": "ApiWeb.FrequentlyAskedQuestionController.delete",
        "parameters": [
          {
            "description": "Frequently Asked Question ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/FrequentlyAskedQuestions"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete Frequently Asked Question",
        "tags": [
          "FrequentlyAskedQuestion"
        ]
      },
      "get": {
        "description": "Get FrequentlyAskedQuestion By ID",
        "operationId": "ApiWeb.FrequentlyAskedQuestionController.show",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/FrequentlyAskedQuestions"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Frequently Asked Question By ID",
        "tags": [
          "FrequentlyAskedQuestion"
        ]
      },
      "put": {
        "description": "Update Frequently Asked Question",
        "operationId": "ApiWeb.FrequentlyAskedQuestionController.update",
        "parameters": [
          {
            "description": "Interest ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Update FrequentlyAskedQuestion Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateFrequentlyAskedQuestion"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/FrequentlyAskedQuestions"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update Frequently Asked Question",
        "tags": [
          "FrequentlyAskedQuestion"
        ]
      }
    },
    "/interests": {
      "get": {
        "description": "Get List OF Interests",
        "operationId": "ApiWeb.InterestController.index",
        "parameters": [
          {
            "description": "Page no.",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Search",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListInterest"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get List OF Interests",
        "tags": [
          "Interest"
        ]
      },
      "post": {
        "description": "It will Create a new Interests.",
        "operationId": "ApiWeb.InterestController.create",
        "parameters": [
          {
            "description": "Create Interest params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateInterest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Interest"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create Interests",
        "tags": [
          "Interest"
        ]
      }
    },
    "/interest-topics/{id}": {
      "delete": {
        "description": "Delete Interest Topic",
        "operationId": "ApiWeb.InterestTopicController.delete",
        "parameters": [
          {
            "description": "Interest Topic ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/InterestTopic"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete InterestTopics",
        "tags": [
          "InterestTopic"
        ]
      },
      "get": {
        "description": "Get Interest Topics By ID",
        "operationId": "ApiWeb.InterestTopicController.show",
        "parameters": [
          {
            "description": "Interest Topic ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/InterestTopic"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Interest Topics By ID",
        "tags": [
          "InterestTopic"
        ]
      },
      "put": {
        "description": "Update Interest Topics after changing the interest_id, topic_name and description according\r\n    to your case.",
        "operationId": "ApiWeb.InterestTopicController.update",
        "parameters": [
          {
            "description": "Interest Topic ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Update Interest Topic Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateInterestTopic"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/InterestTopic"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update Interest Topic",
        "tags": [
          "InterestTopic"
        ]
      }
    },
    "/send-invite": {
      "post": {
        "description": "Send Referral code of room",
        "operationId": "ApiWeb.UserChatController.send_invite_of_room",
        "parameters": [
          {
            "description": "send referral code of room",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendInvite"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {},
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Send Referral code of room",
        "tags": [
          "UserChat"
        ]
      }
    },
    "/guest/interests-feed": {
      "get": {
        "description": "It will Create a interests for feed.",
        "operationId": "ApiWeb.InterestController.interests_feed_guest",
        "parameters": [
          {
            "description": "Device id",
            "in": "query",
            "name": "device_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page no.",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Interest"
            }
          }
        },
        "summary": "interests_feed-for-guest",
        "tags": [
          "Interest"
        ]
      }
    },
    "/user-blocks": {
      "get": {
        "description": "Get List OF User Blocks",
        "operationId": "ApiWeb.UserBlockController.index",
        "parameters": [
          {
            "description": "Page no.",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListBlock"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get List OF User Blocks",
        "tags": [
          "UserBlock"
        ]
      },
      "post": {
        "description": "Used to block a user OR Unblock them by ID",
        "operationId": "ApiWeb.UserBlockController.block_unblock_user",
        "parameters": [
          {
            "description": "Block/Unblock a User",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBlock"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Block"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Block or Unblock a User",
        "tags": [
          "UserBlock"
        ]
      }
    },
    "/user-profile/{id}": {
      "get": {
        "description": "Get User By ID",
        "operationId": "ApiWeb.UserController.show",
        "parameters": [
          {
            "description": "User ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get User By ID",
        "tags": [
          "User"
        ]
      }
    },
    "/admin/user-status": {
      "put": {
        "description": "Allows the admin to set the user's is_active key to TRUE or FALSE",
        "operationId": "ApiWeb.AdminController.update_user_active_status",
        "parameters": [
          {
            "description": "User ID",
            "in": "query",
            "name": "user_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Set active status to True or False",
            "in": "query",
            "name": "active_status",
            "required": true,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Set a user status to Active or Inactive",
        "tags": [
          "Admin"
        ]
      }
    },
    "/user-room-chat": {
      "get": {
        "description": "Get data by room ID",
        "operationId": "ApiWeb.UserChatController.user_room_chat",
        "parameters": [
          {
            "description": "Room ID",
            "in": "query",
            "name": "room_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page no.",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ChatMessage"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Messages or comments by room ID",
        "tags": [
          "UserChat"
        ]
      }
    },
    "/guest/interests": {
      "get": {
        "description": "Get List OF Interests",
        "operationId": "ApiWeb.InterestController.index_for_guest",
        "parameters": [
          {
            "description": "Page no.",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Search",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListInterest"
            }
          }
        },
        "summary": "Get List OF Interests",
        "tags": [
          "Interest"
        ]
      }
    },
    "/verify-user-image": {
      "post": {
        "description": "User will be able to upload a base 64 encoded image for verification",
        "operationId": "ApiWeb.UserController.verify_user_image",
        "parameters": [
          {
            "description": "base 64 URL of image for verify user image",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerifyUserImage"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/VerifyUserImageResponse"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Verify User Image",
        "tags": [
          "User"
        ]
      }
    },
    "/add-interest-users": {
      "post": {
        "description": "Add single/multiple users of an interest by entering user_id according to your case.",
        "operationId": "ApiWeb.InterestController.add_interest_users",
        "parameters": [
          {
            "description": "Create Interest Users params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddInterestUsers"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/AddInterestUsersResponse"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Add users for an interest",
        "tags": [
          "Interest"
        ]
      }
    },
    "/complete-signup": {
      "post": {
        "description": "Complete signup for invited user. User needs to add first and last name with the profile picture(base 64 encoded).",
        "operationId": "ApiWeb.UserController.complete_signup",
        "parameters": [
          {
            "description": "Complete signup for invited user. User needs to add first and last name with the profile picture(base 64 encoded).",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompleteSignup"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Complete signup for invited user",
        "tags": [
          "User"
        ]
      }
    },
    "/sign-in": {
      "post": {
        "description": "SignIn with email and password",
        "operationId": "ApiWeb.UserController.sign_in",
        "parameters": [
          {
            "description": "SignIn Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignIn"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "summary": "SignIn",
        "tags": [
          "User"
        ]
      }
    },
    "/reward-offers/{id}": {
      "get": {
        "description": "Get Reward Offer By ID",
        "operationId": "ApiWeb.RewardOfferController.show",
        "parameters": [
          {
            "description": "Reward Offer ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/RewardOffer"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Reward Offer By ID",
        "tags": [
          "RewardOffer"
        ]
      },
      "put": {
        "description": "Update Reward Offer by ID",
        "operationId": "ApiWeb.RewardOfferController.update",
        "parameters": [
          {
            "description": "Reward Offer ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Params for Updating Reward Offer",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRewardOffer"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/RewardOffer"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update Reward Offer by ID",
        "tags": [
          "RewardOffer"
        ]
      }
    },
    "/timeline": {
      "get": {
        "description": "Timeline",
        "operationId": "ApiWeb.PostController.index",
        "parameters": [
          {
            "description": "Page",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Event Start Date",
            "in": "query",
            "name": "event_start_date",
            "required": false,
            "type": "string"
          },
          {
            "description": "Event End Date",
            "in": "query",
            "name": "event_end_date",
            "required": false,
            "type": "string"
          },
          {
            "description": "Event Start Time",
            "in": "query",
            "name": "event_start_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "Event End Time",
            "in": "query",
            "name": "event_end_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "User Latitude",
            "in": "query",
            "name": "user_latitude",
            "required": false,
            "type": "float"
          },
          {
            "description": "User Longitude",
            "in": "query",
            "name": "user_longitude",
            "required": false,
            "type": "float"
          },
          {
            "description": "Comma seprated Interest IDs ",
            "in": "query",
            "name": "interest_ids",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListPost"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Timeline",
        "tags": [
          "Post"
        ]
      }
    },
    "/get-interest-topics": {
      "get": {
        "description": "Get data by Interest ID",
        "operationId": "ApiWeb.InterestController.get_interest_topics",
        "parameters": [
          {
            "description": "Interest ID",
            "in": "query",
            "name": "interest_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page no.",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/InterestTopics"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Interests Topics by Interest ID",
        "tags": [
          "Interest"
        ]
      }
    },
    "/chat-group-members": {
      "get": {
        "description": "Get All Members list by Room ID",
        "operationId": "ApiWeb.InterestTopicController.chat_group_members",
        "parameters": [
          {
            "description": "Room ID",
            "in": "query",
            "name": "room_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page no.",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/InterestTopicMember"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get All Members list by Room ID",
        "tags": [
          "InterestTopic"
        ]
      }
    },
    "/interest-topics": {
      "post": {
        "description": "Create Interest Topics after changing the interest_id, topic_name and description according\r\n    to your case.",
        "operationId": "ApiWeb.InterestTopicController.create",
        "parameters": [
          {
            "description": "Create Interest Topic params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateInterestTopic"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/InterestTopic"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create Interest Topics",
        "tags": [
          "InterestTopic"
        ]
      }
    },
    "/user-roles/{id}": {
      "delete": {
        "description": "Delete UserRole",
        "operationId": "ApiWeb.UserRoleController.delete",
        "parameters": [
          {
            "description": "UserRole ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserRole"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete UserRole",
        "tags": [
          "UserRole"
        ]
      },
      "get": {
        "description": "Get UserRole By ID",
        "operationId": "ApiWeb.UserRoleController.show",
        "parameters": [
          {
            "description": "User ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserRole"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get UserRole By ID",
        "tags": [
          "UserRole"
        ]
      }
    },
    "/post/{post_id}/comments/{id}": {
      "delete": {
        "description": "Delete RoomMessage",
        "operationId": "ApiWeb.CommentController.delete",
        "parameters": [
          {
            "description": "RoomMessage ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/RoomMessage"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete RoomMessage",
        "tags": [
          "Comment"
        ]
      },
      "put": {
        "description": "Update RoomMessage by giving the ID of the post and write your comment in the body",
        "operationId": "ApiWeb.CommentController.update",
        "parameters": [
          {
            "description": "RoomMessage ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Update RoomMessage Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateComment"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/RoomMessage"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update RoomMessage",
        "tags": [
          "Comment"
        ]
      }
    },
    "/room-message": {
      "delete": {
        "description": "Delete a Message from a room by ID",
        "operationId": "ApiWeb.UserChatController.delete_message",
        "parameters": [
          {
            "description": "List of Message ids",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRoomMessage"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/DeleteRoomMessage"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete a Message from Chat",
        "tags": [
          "UserChat"
        ]
      }
    },
    "/interests/{id}": {
      "delete": {
        "description": "Delete Interest",
        "operationId": "ApiWeb.InterestController.delete",
        "parameters": [
          {
            "description": "Interest ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Interest"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete Interests",
        "tags": [
          "Interest"
        ]
      },
      "get": {
        "description": "Get Interests By ID",
        "operationId": "ApiWeb.InterestController.show",
        "parameters": [
          {
            "description": "Interests ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Interest"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Interests By ID",
        "tags": [
          "Interest"
        ]
      },
      "put": {
        "description": "Update Interest",
        "operationId": "ApiWeb.InterestController.update",
        "parameters": [
          {
            "description": "Interest ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Update Interest Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateInterest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Interest"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update Interest",
        "tags": [
          "Interest"
        ]
      }
    },
    "/user-interests": {
      "get": {
        "description": "Get List OF User Interests IDs",
        "operationId": "ApiWeb.InterestController.user_interests_list",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListUserInterest"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get List OF User Interests IDs",
        "tags": [
          "Interest"
        ]
      },
      "post": {
        "description": "It will Create a new Interests of that user.",
        "operationId": "ApiWeb.InterestController.save_user_interests",
        "parameters": [
          {
            "description": "Create User Interest params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserInterest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/CreateUserInterest"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create User Interests",
        "tags": [
          "Interest"
        ]
      }
    },
    "/post-types/{id}": {
      "delete": {
        "description": "Delete Post Type",
        "operationId": "ApiWeb.PostTypeController.delete",
        "parameters": [
          {
            "description": "PostType ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/PostType"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete PostTypes",
        "tags": [
          "PostType"
        ]
      },
      "get": {
        "description": "Get Post Types By ID",
        "operationId": "ApiWeb.PostTypeController.show",
        "parameters": [
          {
            "description": "Post Types ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/PostType"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Post Types By ID",
        "tags": [
          "PostType"
        ]
      },
      "put": {
        "description": "Update Post Type",
        "operationId": "ApiWeb.PostTypeController.update",
        "parameters": [
          {
            "description": "Post Type ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Update Post Type Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePostType"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/PostType"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update Post Type",
        "tags": [
          "PostType"
        ]
      }
    },
    "/add-jetpoints": {
      "post": {
        "description": "Add Jetpoints to User",
        "operationId": "ApiWeb.RewardOfferController.add_jetpoints",
        "parameters": [
          {
            "description": "Add jetpoints params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddJetPoints"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/JetPoint"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Add Jetpoints to User",
        "tags": [
          "RewardOffer"
        ]
      }
    },
    "/personal-user-events": {
      "get": {
        "description": "Get Event By USER ID",
        "operationId": "ApiWeb.UserEventController.personal_user_events",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ShowEventByUserID"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Event By USER ID",
        "tags": [
          "UserEvent"
        ]
      }
    },
    "/user-events/{id}": {
      "delete": {
        "description": "Delete Event",
        "operationId": "ApiWeb.UserEventController.delete",
        "parameters": [
          {
            "description": "Event ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete Event",
        "tags": [
          "UserEvent"
        ]
      },
      "get": {
        "description": "Get Event By ID",
        "operationId": "ApiWeb.UserEventController.show",
        "parameters": [
          {
            "description": "Event ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ShowEvent"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Event By ID",
        "tags": [
          "UserEvent"
        ]
      },
      "put": {
        "description": "Update Event",
        "operationId": "ApiWeb.UserEventController.update",
        "parameters": [
          {
            "description": "Event ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Update Event Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateEvent"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update Event",
        "tags": [
          "UserEvent"
        ]
      }
    },
    "/report-source": {
      "get": {
        "description": "Get Report Source",
        "operationId": "ApiWeb.ReportMessagesController.list_report_source",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ReportSource"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Report Source",
        "tags": [
          "ReportMessages"
        ]
      }
    },
    "/follow": {
      "get": {
        "description": "Get a List of following or follower.",
        "operationId": "ApiWeb.UserFollowController.index",
        "parameters": [
          {
            "description": "List of Followers by User ID",
            "in": "query",
            "name": "followed_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "List of Following by user ID",
            "in": "query",
            "name": "follower_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/GetFollow"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get a List of following or follower",
        "tags": [
          "UserFollow"
        ]
      },
      "post": {
        "description": "Follow or Unfollow a User. Or cancel a follow request",
        "operationId": "ApiWeb.UserFollowController.create",
        "parameters": [
          {
            "description": "Follow, Unfollow or Cancel follow request",
            "in": "query",
            "items": {
              "enum": [
                "followed",
                "unfollowed",
                "cancelled"
              ],
              "type": "string"
            },
            "name": "status_id",
            "required": true,
            "type": "array"
          },
          {
            "description": "User ID to follow or unfollow",
            "in": "query",
            "name": "followed_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Follow"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Follow or Unfollow a User. Or cancel a follow request",
        "tags": [
          "UserFollow"
        ]
      }
    },
    "/post-types": {
      "get": {
        "description": "Get List OF Post Types",
        "operationId": "ApiWeb.PostTypeController.index",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListPostType"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get List OF Post Types",
        "tags": [
          "PostType"
        ]
      },
      "post": {
        "description": "Create Post Types",
        "operationId": "ApiWeb.PostTypeController.create",
        "parameters": [
          {
            "description": "Create Post Type params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePostType"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/PostType"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create Post Types",
        "tags": [
          "PostType"
        ]
      }
    },
    "/total-reward-points": {
      "get": {
        "description": "Get Total Reward Points of User",
        "operationId": "ApiWeb.RewardOfferController.total_points",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/TotalRewardPoints"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Total Reward Points of User",
        "tags": [
          "RewardOffer"
        ]
      }
    },
    "/comments/{parent_sref}/replies/{id}": {
      "delete": {
        "description": "Delete Reply",
        "operationId": "ApiWeb.CommentReplyController.delete",
        "parameters": [
          {
            "description": "RoomMessage ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Reply"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete Reply",
        "tags": [
          "CommentReply"
        ]
      },
      "get": {
        "description": "Get Reply By",
        "operationId": "ApiWeb.CommentReplyController.show",
        "parameters": [
          {
            "description": "RoomMessage ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Reply"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Reply By",
        "tags": [
          "CommentReply"
        ]
      },
      "put": {
        "description": "Update Reply by giving the ID of the post and write your comment in the body",
        "operationId": "ApiWeb.CommentReplyController.update",
        "parameters": [
          {
            "description": "RoomMessage ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Update Reply Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateComment"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Reply"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update Reply",
        "tags": [
          "CommentReply"
        ]
      }
    },
    "/user-events-add-attendee": {
      "post": {
        "description": "It will Add new attendee to group chat from params",
        "operationId": "ApiWeb.UserEventController.user_event_add_attendee",
        "parameters": [
          {
            "description": "Add new attendee to group chat from params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddEventAttendee"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "message": "",
              "success": true
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Add a user to an event",
        "tags": [
          "UserEvent"
        ]
      }
    },
    "/roles": {
      "get": {
        "description": "Get List OF Roles",
        "operationId": "ApiWeb.RoleController.index",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListRole"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get List OF Roles",
        "tags": [
          "Role"
        ]
      },
      "post": {
        "description": "Create Role",
        "operationId": "ApiWeb.RoleController.create",
        "parameters": [
          {
            "description": "Create Role params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRole"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create Role",
        "tags": [
          "Role"
        ]
      }
    },
    "/user-city/{id}": {
      "delete": {
        "description": "Delete User City",
        "operationId": "ApiWeb.UserCountryController.delete",
        "parameters": [
          {
            "description": "User Country ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserCountry"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete User City",
        "tags": [
          "UserCountry"
        ]
      }
    },
    "/accept-decline-request": {
      "post": {
        "description": "Accept or Decline Follow Request",
        "operationId": "ApiWeb.UserFollowController.accept_or_decline_follow_request",
        "parameters": [
          {
            "description": "Accept or Decline request",
            "in": "query",
            "items": {
              "enum": [
                "followed",
                "unfollowed"
              ],
              "type": "string"
            },
            "name": "status_id",
            "required": true,
            "type": "array"
          },
          {
            "description": "User ID whose request is to be Accepted or declined",
            "in": "query",
            "name": "user_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Follows"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Accept or Decline Follow Request",
        "tags": [
          "UserFollow"
        ]
      }
    },
    "/logout": {
      "get": {
        "description": "Logout",
        "operationId": "ApiWeb.UserController.logout",
        "parameters": [
          {
            "description": "Device Token",
            "in": "query",
            "name": "device_token",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Logout",
        "tags": [
          "User"
        ]
      }
    },
    "/resources/{id}": {
      "delete": {
        "description": "Delete Resource",
        "operationId": "ApiWeb.ResourceController.delete",
        "parameters": [
          {
            "description": "Resource ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete Resource",
        "tags": [
          "Resource"
        ]
      },
      "get": {
        "description": "Get Resource By ID",
        "operationId": "ApiWeb.ResourceController.show",
        "parameters": [
          {
            "description": "Resource ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Resource By ID",
        "tags": [
          "Resource"
        ]
      },
      "put": {
        "description": "Update Resource",
        "operationId": "ApiWeb.ResourceController.update",
        "parameters": [
          {
            "description": "Resource ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Update Resource Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateResource"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update Resource",
        "tags": [
          "Resource"
        ]
      }
    },
    "/get-interest-users": {
      "get": {
        "description": "Get data by Interest ID",
        "operationId": "ApiWeb.InterestController.get_interest_users",
        "parameters": [
          {
            "description": "Interest ID",
            "in": "query",
            "name": "interest_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page no.",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserInterests"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Users by Interest ID",
        "tags": [
          "Interest"
        ]
      }
    },
    "/posts/{id}": {
      "delete": {
        "description": "Delete Post",
        "operationId": "ApiWeb.PostController.delete",
        "parameters": [
          {
            "description": "Post ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete Post",
        "tags": [
          "Post"
        ]
      },
      "get": {
        "description": "Get Post By ID",
        "operationId": "ApiWeb.PostController.show",
        "parameters": [
          {
            "description": "Post ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Post By ID",
        "tags": [
          "Post"
        ]
      },
      "put": {
        "description": "Update Post",
        "operationId": "ApiWeb.PostController.update",
        "parameters": [
          {
            "description": "Post ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Update Post Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePost"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update Post",
        "tags": [
          "Post"
        ]
      }
    },
    "/notification-status": {
      "get": {
        "description": "Get List OF Read and Unread notification",
        "operationId": "ApiWeb.PushNotificationController.index",
        "parameters": [
          {
            "description": "Page no.",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListNotification"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get List OF read and unread notification",
        "tags": [
          "PushNotification"
        ]
      },
      "post": {
        "description": "Update Status of read and unread notification",
        "operationId": "ApiWeb.PushNotificationController.create",
        "parameters": [
          {
            "description": "Update Push Notification Params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateNotificationStatus"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UpdateNotificationStatus"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update Notification Status",
        "tags": [
          "PushNotification"
        ]
      }
    },
    "/user-favourite": {
      "post": {
        "description": "Create a new User Favourite",
        "operationId": "ApiWeb.UserFavoriteController.create",
        "parameters": [
          {
            "description": "Create a new user Favourite from params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserFavorite"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserFavorite"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create User Favourite",
        "tags": [
          "UserFavorite"
        ]
      }
    },
    "/faqs": {
      "get": {
        "description": "Get List OF FrequentlyAskedQuestions",
        "operationId": "ApiWeb.FrequentlyAskedQuestionController.index",
        "parameters": [
          {
            "description": "Page no.",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/FrequentlyAskedQuestions"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get List OF FrequentlyAskedQuestions",
        "tags": [
          "FrequentlyAskedQuestion"
        ]
      },
      "post": {
        "description": "Create a new frequently_asked_question",
        "operationId": "ApiWeb.FrequentlyAskedQuestionController.create",
        "parameters": [
          {
            "description": "Create a new frequently_asked_question from params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Create"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/FrequentlyAskedQuestions"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create New Frequently Asked Question",
        "tags": [
          "FrequentlyAskedQuestion"
        ]
      }
    },
    "/start-user-chat": {
      "post": {
        "description": "Start User Chat (send User ID to start chat with him/her), If you give group_name with referral_code without any user_id then it will create a private group and only are the member of this group.",
        "operationId": "ApiWeb.UserChatController.start_user_chat",
        "parameters": [
          {
            "description": "returns that started chat",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartUserChat"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ChatRoomInListing"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Start User Chat",
        "tags": [
          "UserChat"
        ]
      }
    },
    "/user-city": {
      "post": {
        "description": "Save User City and return other cities of users",
        "operationId": "ApiWeb.UserCountryController.create",
        "parameters": [
          {
            "description": "Create User City params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserCity"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/CreateUserCity"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create User city",
        "tags": [
          "UserCountry"
        ]
      }
    },
    "/invite-user": {
      "post": {
        "description": "Invite user with referral code by giving email in the body of that user.",
        "operationId": "ApiWeb.UserController.invite_user",
        "parameters": [
          {
            "description": "Invite user with referral code by giving email in the body of that user.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InviteUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/InviteUser"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "User Invite",
        "tags": [
          "User"
        ]
      }
    },
    "/user-event-likes": {
      "post": {
        "description": "Like or Unlike a Comment or a Reply by ID of the comment or reply",
        "operationId": "ApiWeb.LikeController.like_unlike_comment_or_reply",
        "parameters": [
          {
            "description": "Like a Comment or Reply",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LikeComment"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserEventCommentLike"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Like or Unlike a Comment or Reply",
        "tags": [
          "Like"
        ]
      }
    },
    "/list-likes": {
      "get": {
        "description": "See the list of people who liked a post or a comment",
        "operationId": "ApiWeb.LikeController.list_likes",
        "parameters": [
          {
            "description": "Page no.",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Post (Event) ID",
            "in": "query",
            "name": "post_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Comment ID",
            "in": "query",
            "name": "comment_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Search",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ListLikes"
            }
          }
        },
        "summary": "See who liked the post or comment",
        "tags": [
          "Like"
        ]
      }
    },
    "/follow-request-list": {
      "get": {
        "description": "Get Follow Request of Current User",
        "operationId": "ApiWeb.UserFollowController.show_current_user_follow_requests_list",
        "parameters": [
          {
            "description": "Page",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Follows"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Follow Request",
        "tags": [
          "UserFollow"
        ]
      }
    },
    "/admin/list-users": {
      "get": {
        "description": "List Users with Active Status",
        "operationId": "ApiWeb.AdminController.list_users",
        "parameters": [
          {
            "description": "Whether the users are active or not",
            "in": "query",
            "name": "active_status",
            "required": true,
            "type": "boolean"
          },
          {
            "description": "Page no. used for pagination",
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "List Users with Active Status",
        "tags": [
          "Admin"
        ]
      }
    },
    "/friend/{id}": {
      "get": {
        "description": "Get a user's Friend list By his/her ID",
        "operationId": "ApiWeb.UserFriendController.show",
        "parameters": [
          {
            "description": "user ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Friends"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Friends By user ID",
        "tags": [
          "UserFriend"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "Bearer": {
      "description": "For accessing the API a valid JWT token must be passed in all the queries in the 'Authorization' header.\n\nA valid JWT token is generated by the API and returned as answer of a call to the route **/sign_in** giving a valid app, login and password.\n\n\nThe following syntax must be used in the 'Authorization' header :\n\n**Authorization:** Bearer {{JWT Token}} - In the below field Just Pass \"`Bearer {{JWT Token}}`\".",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0"
}